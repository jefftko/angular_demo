{"version":3,"sources":["ng://@delon/form/src/errors.ts","ng://@delon/form/src/config.ts","node_modules/tslib/tslib.es6.js","ng://@delon/form/src/utils.ts","ng://@delon/form/src/model/form.property.ts","ng://@delon/form/src/model/array.property.ts","ng://@delon/form/src/model/atomic.property.ts","ng://@delon/form/src/model/boolean.property.ts","ng://@delon/form/src/model/number.property.ts","ng://@delon/form/src/model/object.property.ts","ng://@delon/form/src/model/string.property.ts","ng://@delon/form/src/model/form.property.factory.ts","ng://@delon/form/src/terminator.service.ts","ng://@delon/form/src/validator.factory.ts","ng://@delon/form/src/widget.factory.ts","ng://@delon/form/src/sf.component.ts","ng://@delon/form/src/sf-item.component.ts","ng://@delon/form/src/sf-fixed.directive.ts","ng://@delon/form/src/sf-item-wrap.component.ts","ng://@delon/form/src/widgets/custom/sf-template.directive.ts","ng://@delon/form/src/widget.ts","ng://@delon/form/src/widgets/array/array.widget.ts","ng://@delon/form/src/widgets/autocomplete/autocomplete.widget.ts","ng://@delon/form/src/widgets/boolean/boolean.widget.ts","ng://@delon/form/src/widgets/cascader/cascader.widget.ts","ng://@delon/form/src/widgets/checkbox/checkbox.widget.ts","ng://@delon/form/src/widgets/custom/custom.widget.ts","ng://@delon/form/src/widgets/date/date.widget.ts","ng://@delon/form/src/widgets/mention/mention.widget.ts","ng://@delon/form/src/widgets/number/number.widget.ts","ng://@delon/form/src/widgets/object/object.widget.ts","ng://@delon/form/src/widgets/radio/radio.widget.ts","ng://@delon/form/src/widgets/rate/rate.widget.ts","ng://@delon/form/src/widgets/select/select.widget.ts","ng://@delon/form/src/widgets/slider/slider.widget.ts","ng://@delon/form/src/widgets/string/string.widget.ts","ng://@delon/form/src/widgets/tag/tag.widget.ts","ng://@delon/form/src/widgets/text/text.widget.ts","ng://@delon/form/src/widgets/textarea/textarea.widget.ts","ng://@delon/form/src/widgets/time/time.widget.ts","ng://@delon/form/src/widgets/transfer/transfer.widget.ts","ng://@delon/form/src/widgets/tree-select/tree-select.widget.ts","ng://@delon/form/src/widgets/upload/upload.widget.ts","ng://@delon/form/src/widgets/nz-widget.registry.ts","ng://@delon/form/src/module.ts"],"names":["ERRORSDEFAULT","false schema","$ref","additionalItems","additionalProperties","anyOf","dependencies","enum","format","type","required","maxLength","minLength","minimum","formatMinimum","maximum","formatMaximum","maxItems","minItems","maxProperties","minProperties","multipleOf","not","oneOf","pattern","uniqueItems","custom","propertyNames","patternRequired","switch","const","contains","formatExclusiveMaximum","formatExclusiveMinimum","if","DelonFormConfig","this","ingoreKeywords","liveValidate","autocomplete","firstVisual","onlyVisual","errors","button","submit_type","reset_type","uiDateStringFormat","uiDateNumberFormat","uiTimeStringFormat","uiTimeNumberFormat","Injectable","args","providedIn","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","constructor","prototype","create","__assign","assign","t","s","i","n","arguments","length","call","apply","__decorate","decorators","target","key","desc","c","r","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","__metadata","metadataKey","metadataValue","metadata","__values","o","m","Symbol","iterator","next","value","done","__read","e","ar","push","error","__spread","concat","FORMATMAPS","date-time","widget","showTime","date","full-date","time","full-time","week","mode","month","uri","email","color","","isBlank","toBool","defaultValue","di","_i","console","warn","retrieveSchema","schema","definitions","$refSchema","findSchemaDefinition","match","exec","parts","split","current","parts_1","tslib_1.__values","parts_1_1","part","replace","Error","localSchema","__rest","indexOf","getOwnPropertySymbols","resolveIf","ui","properties","allKeys","keys","ifKeys","detectKey","then","hasElse","else","visibleIf","visibleElse","forEach","cond","includes","detectKeys","getEnum","list","formData","readOnly","isArray","map","item","label","checked","disabled","getCopyEnum","deepCopy","getData","asyncArgs","asyncData","pipe","of","FormProperty","schemaValidatorFactory","parent","path","options","_value","_errors","_objErrors","_valueChanges","BehaviorSubject","_errorsChanges","_visible","_visibilityChanges","schemaValidator","createValidatorFn","default","_parent","_root","root","PropertyGroup","_path","updateValueAndValidity","onlySelf","emitValueEvent","emitValidator","_updateValue","valueChanges","_runValidation","searchProperty","prop","base","result","findRoot","getProperty","substr","property","isEmptyData","_this","isEmpty","_required","keyword","customValidator","validator","customErrors","Observable","subscribe","res","setCustomErrors","detectChanges","setErrors","err","idx","message","_custom","mergeErrors","newErrors","emitFormat","v","params","setParentAndPlatErrors","platErrors","visible","setVisible","resetValue","_bindVisibility","undefined","propertiesBinding","dependencyPath","this_1","valueCheck","vi","visibilityCheck","and","combineLatest","results","values","distinctUntilChanged","_super","tslib_1.__extends","subPathIdx","propertyId","subPath","forEachChild","fn","forEachChildRecursive","child","_bindVisibilityRecursive","isRoot","ArrayProperty","formPropertyFactory","tick","pos","isNaN","setValue","clearErrors","resetProperties","_hasValue","addProperty","newProperty","createProperty","items","$items","formDatas","formDatas_1","formDatas_1_1","add","remove","index","splice","AtomicProperty","fallbackValue","reset","BooleanProperty","NumberProperty","parseFloat","parseInt","ObjectProperty","_propertiesId","createProperties","orderedProperties","orderProperties","order","arrayToHash","arr","reduce","prev","curr","errorPropList","join","propertyHash","orderHash","extraneous","filter","rest","restIndex","lastIndexOf","complete","title","StringProperty","FormPropertyFactory","refSchema","TypeError","initializeRoot","rootProperty","TerminatorService","onDestroy","Subject","destroy","SchemaValidatorFactory","AjvSchemaValidatorFactory","ajv","Ajv","errorDataPath","allErrors","jsonPointers","addFormat","extraOptions","validate","w","Inject","WidgetRegistry","widgets","setDefault","defaultWidget","register","has","getType","WidgetFactory","registry","resolver","createWidget","container","componentClass","componentFactory","resolveComponentFactory","createComponent","ComponentFactoryResolver","useFactory","SFComponent","terminator","cdr","i18n","locale","_renders","Map","_valid","_inited","layout","formChange","EventEmitter","formSubmit","formReset","formError","i18n$","change","coverButtonProperty","_mode","_btn","submit","search","edit","_item","getValue","onSubmit","preventDefault","stopPropagation","valid","emit","coverProperty","isHorizontal","_schema","inFn","parentSchema","uiSchema","parentUiSchema","uiRes","uiKey","_defUi","spanLabelFixed","spanLabel","spanControl","offsetControl","end","dateEndProperty","hidden","inIfFn","size","_ui","debug","render","firstKey","find","startsWith","btnUi","grid","offset","span","class","ngOnInit","ngOnChanges","refreshSchema","_addTpl","templateRef","set","_render","attachCustomRender","tpl","pui","newSchema","newUI","_formData","cleanRootSub","errorsChanges","Promise","resolve","unsubscribe","ngOnDestroy","Component","selector","template","providers","provide","deps","host","[class.sf]","[class.sf-search]","[class.sf-edit]","changeDetection","ChangeDetectionStrategy","OnPush","ChangeDetectorRef","DelonLocaleService","Input","Output","tslib_1.__decorate","InputBoolean","nextUniqueId","SFItemComponent","widgetFactory","unsubscribe$","onWidgetInstanciated","id","formProperty","ref","instance","ViewChild","read","ViewContainerRef","SFFixedDirective","er","el","init","num","widgetEl","querySelector","addClass","labelEl","unit","setStyle","controlEl","ngAfterViewInit","Directive","ElementRef","Renderer2","InputNumber","SFItemWrapComponent","SFTemplateDirective","table","TemplateRef","Widget","cd","injector","sfItemComp","sfComp","showError","takeUntil","markForCheck","Injector","HostBinding","ControlWidget","ArrayLayoutWidget","ObjectLayoutWidget","ArrayWidget","arraySpan","addTitle","l","addText","addType","removeTitle","removable","removeText","addItem","removeItem","EMAILSUFFIX","AutoCompleteWidget","fixData","typing","isAsync","updateValue","nzLabel","nzValue","backfill","defaultActiveFirstOption","width","filterOption","input","option","toLowerCase","orgTime","debounceTime","Math","max","ngModel","startWith","flatMap","filterData","addEmailSuffix","domain","NgModel","BooleanWidget","CascaderWidget","data","clearText","showArrow","showInput","triggerAction","loadData","node","_visibleChange","status","visibleChange","_change","_selectionChange","selectionChange","_select","select","_clear","clear","CheckboxWidget","allChecked","indeterminate","labelTitle","inited","grid_span","updateAllChecked","_setValue","notifyChange","notifySet","checkList","groupInGridChange","onAllChecked","every","setTimeout","CustomWidget","DateWidget","displayValue","flatRange","displayFormat","allowClear","showToday","compCd","toDate","endProperty","setEnd","_openChange","onOpenChange","_ok","onOk","Date","MentionWidget","loading","_a","valueWith","notFoundContent","placement","prefix","autosize","min","count","mentionChild","getMentions","_search","tap","NumberWidget","formatter","parser","exclusiveMinimum","exclusiveMaximum","step","trunc","val","floor","ObjectWidget","_b","propertiesId","_c","show","RadioWidget","styleType","RateWidget","hasText","allowHalf","autoFocus","text","genText","SelectWidget","hasGroup","dropdownClassName","dropdownMatchSelectWidth","serverSearch","maxMultipleCount","Infinity","showSearch","group","openChange","searchChange","onSearch","scrollToBottom","SliderWidget","_formatter","marks","included","_afterChange","afterChange","StringWidget","addOnAfter","addOnBefore","addOnAfterIcon","addOnBeforeIcon","prefixIcon","suffix","suffixIcon","TagWidget","onChange","checkedChange","_afterClose","afterClose","_close","onClose","TextWidget","TextareaWidget","TimeWidget","allowEmpty","defaultOpenValue","hideDisabledOptions","hourStep","minuteStep","nzMinuteStep","secondStep","toString","utcEpoch","UTC","getHours","getMinutes","getSeconds","TransferWidget","_data","_canMove","arg","canMove","titles","operations","itemUnit","itemsUnit","direction","notify","to","_searchChange","_selectChange","selectChange","TreeSelectWidget","dc","tranData","NzTreeNode","multiple","checkable","showExpand","showLine","expandChange","defaultExpandAll","defaultExpandedKeys","displayWith","clearChildren","addChildren","UploadWidget","fileList","btnType","handlePreview","file","preview","get","NzModalService","nzContent","url","thumbUrl","nzFooter","action","accept","limit","fileSize","fileType","listType","name","showUploadList","withCredentials","resReName","beforeUpload","customRequest","directory","openFileDialogOnClick","hint","deepGet","response","pop","NzWidgetRegistry","COMPONENTS","WIDGETS","DelonFormModule","forRoot","ngModule","useClass","NgModule","imports","CommonModule","FormsModule","DelonUtilModule","DelonLocaleModule","NgZorroAntdModule","declarations","entryComponents","exports"],"mappings":"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","sourcesContent":["import { Observable } from 'rxjs';\nimport { SFValue } from './interface';\nimport { FormProperty, PropertyGroup } from './model/form.property';\n\nexport const ERRORSDEFAULT = {\n  'false schema': `å¸å°æ¨¡å¼åºé`,\n  '$ref': `æ æ³æ¾å°å¼ç¨{ref}`,\n  'additionalItems': `ä¸åè®¸è¶è¿{ref}`,\n  'additionalProperties': `ä¸åè®¸æé¢å¤çå±æ§`,\n  'anyOf': `æ°æ®åºä¸º anyOf ææå®çå¶ä¸­ä¸ä¸ª`,\n  'dependencies': `åºå½æ¥æå±æ§{property}çä¾èµå±æ§{deps}`,\n  'enum': `åºå½æ¯é¢è®¾å®çæä¸¾å¼ä¹ä¸`,\n  'format': `æ ¼å¼ä¸æ­£ç¡®`, // `åºå½å¹éæ ¼å¼ \"{format}\"`,\n  'type': `ç±»ååºå½æ¯ {type}`,\n  'required': `å¿å¡«é¡¹`,\n  'maxLength': `è³å¤ {limit} ä¸ªå­ç¬¦`,\n  'minLength': `è³å° {limit} ä¸ªå­ç¬¦ä»¥ä¸`,\n  'minimum': `å¿é¡» {comparison}{limit}`,\n  'formatMinimum': `å¿é¡» {comparison}{limit}`,\n  'maximum': `å¿é¡» {comparison}{limit}`,\n  'formatMaximum': `å¿é¡» {comparison}{limit}`,\n  'maxItems': `ä¸åºå¤äº {limit} ä¸ªé¡¹`,\n  'minItems': `ä¸åºå°äº {limit} ä¸ªé¡¹`,\n  'maxProperties': `ä¸åºå¤äº {limit} ä¸ªå±æ§`,\n  'minProperties': `ä¸åºå°äº {limit} ä¸ªå±æ§`,\n  'multipleOf': `åºå½æ¯ {multipleOf} çæ´æ°å`,\n  'not': `ä¸åºå½å¹é \"not\" schema`,\n  'oneOf': `åªè½å¹éä¸ä¸ª \"oneOf\" ä¸­ç schema`,\n  'pattern': `æ°æ®æ ¼å¼ä¸æ­£ç¡®`,\n  'uniqueItems': `ä¸åºå½å«æéå¤é¡¹ (ç¬¬ {j} é¡¹ä¸ç¬¬ {i} é¡¹æ¯éå¤ç)`,\n  'custom': `æ ¼å¼ä¸æ­£ç¡®`,\n  'propertyNames': `å±æ§å \"{propertyName}\" æ æ`,\n  'patternRequired': `åºå½æå±æ§å¹éæ¨¡å¼ {missingPattern}`,\n  'switch': `ç±äº {caseIndex} å¤±è´¥ï¼æªéè¿ \"switch\" æ ¡éª`,\n  'const': `åºå½ç­äºå¸¸é`,\n  'contains': `åºå½åå«ä¸ä¸ªææé¡¹`,\n  'formatExclusiveMaximum': `formatExclusiveMaximum åºå½æ¯å¸å°å¼`,\n  'formatExclusiveMinimum': `formatExclusiveMinimum åºå½æ¯å¸å°å¼`,\n  'if': `åºå½å¹éæ¨¡å¼ \"{failingKeyword}\"`,\n};\n\nexport interface ErrorData {\n  keyword: string;\n  dataPath?: string;\n  schemaPath?: string;\n  // tslint:disable-next-line:no-any\n  params?: { [key: string]: any };\n  message?: string;\n  _custom?: boolean;\n}\n\nexport interface ErrorSchema {\n  /**\n   * æ¯å¦å®æ¶æ ¡éªï¼é»è®¤ï¼`true`\n   * - `true` æ¯ä¸æ¬¡é½æ ¡éª\n   * - `false` æäº¤æ¶æ ¡éª\n   */\n  liveValidate?: boolean;\n  /**\n   * èªå®ä¹éè¯¯ä¿¡æ¯ææ¬ï¼é®åèµå `ErrorData.keyword` å¼\n   */\n  errors?: { [key: string]: string | ((obj: ErrorData) => string) };\n  /**\n   * æ¯å¦ç«å³åç°éè¯¯è§è§ï¼é»è®¤ï¼`false`\n   */\n  firstVisual?: boolean;\n  /**\n   * æ¯å¦åªå±ç¤ºéè¯¯è§è§ä¸æ¾ç¤ºéè¯¯ææ¬ï¼é»è®¤ï¼`false`\n   */\n  onlyVisual?: boolean;\n  /**\n   * æ¯å¦å¿½ç¥æäºæ°æ®ç±»åæ ¡éª `ERRORSDEFAULT`\n   * - å¼å§ç»åå« `DelonSchemaFormConfig.ingoreKeywords`\n   */\n  ingoreKeywords?: string[];\n  /**\n   * èªå®ä¹æ ¡éª\n   */\n  validator?: (value: SFValue, formProperty: FormProperty, form: PropertyGroup) => ErrorData[] | Observable<ErrorData[]>;\n}\n","import { Injectable } from '@angular/core';\nimport { ERRORSDEFAULT } from './errors';\nimport { SFButton } from './interface';\nimport { SFUISchemaItem } from './schema/ui';\n\n@Injectable({ providedIn: 'root' })\nexport class DelonFormConfig {\n  /**\n   * æ¯å¦å¿½ç¥æäºæ°æ®ç±»åæ ¡éª `ERRORSDEFAULT`ï¼é»è®¤ï¼`[ 'type', 'enum' ]`\n   *\n   * - `type` éå® Schema ä¸­ `type` ç±»å\n   * - `enum` éå®åºå½æ¯é¢è®¾å®çæä¸¾å¼ä¹ä¸\n   */\n  ingoreKeywords?: string[] = ['type', 'enum'];\n  /**\n   * [ajv](http://epoberezkin.github.io/ajv/#options) åæ°\n   */\n  // tslint:disable-next-line:no-any\n  ajv?: any;\n  /**\n   * æ¯å¦å®æ¶æ ¡éªï¼é»è®¤ï¼`true`\n   * - `true` æ¯ä¸æ¬¡é½æ ¡éª\n   * - `false` æäº¤æ¶æ ¡éª\n   */\n  liveValidate ?= true;\n  /**\n   * æå®è¡¨å `autocomplete` å¼ï¼é»è®¤ï¼`on`\n   */\n  autocomplete?: 'on' | 'off' = null;\n  /**\n   * æ¯å¦ç«å³åç°éè¯¯è§è§ï¼é»è®¤ï¼`false`\n   */\n  firstVisual ?= false;\n  /**\n   * æ¯å¦åªå±ç¤ºéè¯¯è§è§ä¸æ¾ç¤ºéè¯¯ææ¬ï¼é»è®¤ï¼`false`\n   */\n  onlyVisual ?= false;\n  /**\n   * èªå®ä¹éç¨éè¯¯ä¿¡æ¯\n   */\n  errors?: { [key: string]: string } = ERRORSDEFAULT;\n  /**\n   * é»è®¤å¨å±å¸å±\n   */\n  ui?: SFUISchemaItem;\n  /**\n   * åç´ ç»ä»¶å¤§å°ï¼ç¨äº `nzSize` å¼\n   */\n  size?: 'default' | 'large' | 'small';\n  /**\n   * æé®é£æ ¼\n   */\n  button?: SFButton = {\n    submit_type: 'primary',\n    reset_type: 'default',\n  };\n  /**\n   * dateå°é¨ä»¶ï¼`type=\"string\"` ä¸ä¸æå® `schema.format` å `ui.format` æ¶æ¥ææ ¼å¼ï¼é»è®¤ï¼`YYYY-MM-DD HH:mm:ss`\n   */\n  uiDateStringFormat ?= 'YYYY-MM-DD HH:mm:ss';\n  /**\n   * dateå°é¨ä»¶ï¼`type=\"number\"` ä¸ä¸æå® `schema.format` å `ui.format` æ¶æ¥ææ ¼å¼ï¼é»è®¤ï¼`x` 13ä½Unix Timestamp\n   */\n  uiDateNumberFormat ?= 'x';\n  /**\n   * timeå°é¨ä»¶ï¼`type=\"string\"` ä¸ä¸æå® `schema.format` å `ui.format` æ¶æ¥ææ ¼å¼ï¼é»è®¤ï¼`HH:mm:ss`\n   */\n  uiTimeStringFormat ?= 'HH:mm:ss';\n  /**\n   * timeå°é¨ä»¶ï¼`type=\"number\"` ä¸ä¸æå® `schema.format` å `ui.format` æ¶æ¥ææ ¼å¼ï¼é»è®¤ï¼`x` 13ä½Unix Timestampï¼æ¥æç»ä¸ä½¿ç¨ `1970-01-01`\n   */\n  uiTimeNumberFormat ?= 'x';\n}\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","// tslint:disable:no-any\nimport { deepCopy } from '@delon/util';\nimport { of, Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { SFSchema, SFSchemaDefinition, SFSchemaEnum } from './schema';\nimport { SFUISchemaItem, SFUISchemaItemRun } from './schema/ui';\n\nexport const FORMATMAPS = {\n  'date-time': {\n    widget: 'date',\n    showTime: true,\n    format: 'YYYY-MM-DDTHH:mm:ssZ',\n  },\n  'date': { widget: 'date', format: 'YYYY-MM-DD' },\n  'full-date': { widget: 'date', format: 'YYYY-MM-DD' },\n  'time': { widget: 'time' },\n  'full-time': { widget: 'time' },\n  'week': { widget: 'date', mode: 'week', format: 'YYYY-WW' },\n  'month': { widget: 'date', mode: 'month', format: 'YYYY-MM' },\n  'uri': { widget: 'upload' },\n  'email': { widget: 'autocomplete', type: 'email' },\n  'color': { widget: 'string', type: 'color' },\n  '': { widget: 'string' },\n};\n\nexport function isBlank(o: any) {\n  return o == null;\n}\n\nexport function toBool(value: any, defaultValue: boolean) {\n  return value == null ? defaultValue : `${value}` !== 'false';\n}\n\nexport function di(...args) {\n  // tslint:disable-next-line:no-console\n  console.warn(...args);\n}\n\n/** æ ¹æ® `$ref` æ¥æ¾ `definitions` */\nfunction findSchemaDefinition($ref: string, definitions: SFSchemaDefinition) {\n  const match = /^#\\/definitions\\/(.*)$/.exec($ref);\n  if (match && match[1]) {\n    // parser JSON Pointer\n    const parts = match[1].split('/');\n    let current: any = definitions;\n    for (let part of parts) {\n      part = part.replace(/~1/g, '/').replace(/~0/g, '~');\n      if (current.hasOwnProperty(part)) {\n        current = current[part];\n      } else {\n        throw new Error(`Could not find a definition for ${$ref}.`);\n      }\n    }\n    return current;\n  }\n  throw new Error(`Could not find a definition for ${$ref}.`);\n}\n\n/**\n * ååSchemaï¼å¹¶å¤ç `$ref` çå³ç³»\n */\nexport function retrieveSchema(\n  schema: SFSchema,\n  definitions: SFSchemaDefinition = {},\n): SFSchema {\n  if (schema.hasOwnProperty('$ref')) {\n    const $refSchema = findSchemaDefinition(schema.$ref, definitions);\n    // remove $ref property\n    const { $ref, ...localSchema } = schema;\n    return retrieveSchema({ ...$refSchema, ...localSchema }, definitions);\n  }\n\n  return schema;\n}\n\nexport function resolveIf(schema: SFSchema, ui: SFUISchemaItemRun): SFSchema {\n  if (!(schema.hasOwnProperty('if') && schema.hasOwnProperty('then'))) return;\n\n  if (!schema.if.properties)\n    throw new Error(`if: does not contain 'properties'`);\n\n  const allKeys = Object.keys(schema.properties);\n  const ifKeys = Object.keys(schema.if.properties);\n  detectKey(allKeys, ifKeys);\n  detectKey(allKeys, schema.then.required);\n  schema.required = schema.required.concat(schema.then.required);\n  const hasElse = schema.hasOwnProperty('else');\n  if (hasElse) {\n    detectKey(allKeys, schema.else.required);\n    schema.required = schema.required.concat(schema.else.required);\n  }\n\n  const visibleIf: any = {};\n  const visibleElse: any = {};\n  ifKeys.forEach(key => {\n    const cond = schema.if.properties[key].enum;\n    visibleIf[key] = cond;\n    if (hasElse) visibleElse[key] = (value: any) => !cond.includes(value);\n  });\n\n  schema.then.required.forEach(key => (ui[`$${key}`].visibleIf = visibleIf));\n  if (hasElse)\n    schema.else.required.forEach(\n      key => (ui[`$${key}`].visibleIf = visibleElse),\n    );\n\n  return schema;\n}\n\nfunction detectKey(keys: string[], detectKeys: string[]) {\n  detectKeys.forEach(key => {\n    if (!keys.includes(key)) {\n      throw new Error(`if: properties does not contain '${key}'`);\n    }\n  });\n}\n\nexport function orderProperties(properties: string[], order: string[]) {\n  if (!Array.isArray(order)) return properties;\n  const arrayToHash = arr =>\n    arr.reduce((prev, curr) => {\n      prev[curr] = true;\n      return prev;\n    }, {});\n  const errorPropList = arr => `property [${arr.join(`', '`)}]`;\n\n  const propertyHash = arrayToHash(properties);\n  const orderHash = arrayToHash(order);\n  const extraneous = order.filter(prop => prop !== '*' && !propertyHash[prop]);\n  if (extraneous.length) {\n    throw new Error(\n      `ui schema order list contains extraneous ${errorPropList(extraneous)}`,\n    );\n  }\n  const rest = properties.filter(prop => !orderHash[prop]);\n  const restIndex = order.indexOf('*');\n  if (restIndex === -1) {\n    if (rest.length) {\n      throw new Error(\n        `ui schema order list does not contain ${errorPropList(rest)}`,\n      );\n    }\n    return order;\n  }\n  if (restIndex !== order.lastIndexOf('*')) {\n    throw new Error(\n      'ui schema order list contains more than one wildcard item',\n    );\n  }\n  const complete = [...order];\n  complete.splice(restIndex, 1, ...rest);\n  return complete;\n}\n\nexport function getEnum(list: any[], formData: any, readOnly: boolean): SFSchemaEnum[] {\n  if (isBlank(list) || !Array.isArray(list) || list.length === 0) return [];\n  if (typeof list[0] !== 'object') {\n    list = list.map((item: any) => {\n      return { label: item, value: item } as SFSchemaEnum;\n    });\n  }\n  if (formData) {\n    if (!Array.isArray(formData)) formData = [formData];\n    list.forEach((item: SFSchemaEnum) => {\n      if (~formData.indexOf(item.value)) item.checked = true;\n    });\n  }\n  // fix disabled status\n  if (readOnly) {\n    list.forEach((item: SFSchemaEnum) => item.disabled = true);\n  }\n  return list;\n}\n\nexport function getCopyEnum(list: any[], formData: any, readOnly: boolean) {\n  return getEnum(deepCopy(list || []), formData, readOnly);\n}\n\nexport function getData(\n  schema: SFSchema,\n  ui: SFUISchemaItem,\n  formData: any,\n  asyncArgs?: any,\n): Observable<SFSchemaEnum[]> {\n  if (typeof ui.asyncData === 'function') {\n    return ui\n      .asyncData(asyncArgs)\n      .pipe(map(list => getEnum(list, formData, schema.readOnly)));\n  }\n  return of(getCopyEnum(schema.enum, formData, schema.readOnly));\n}\n","import { combineLatest, BehaviorSubject, Observable } from 'rxjs';\nimport { distinctUntilChanged, map } from 'rxjs/operators';\n\nimport { DelonFormConfig } from '../config';\nimport { ErrorData } from '../errors';\nimport { SFValue } from '../interface';\nimport { SFSchema } from '../schema';\nimport { SFUISchema, SFUISchemaItem, SFUISchemaItemRun } from '../schema/ui';\nimport { isBlank } from '../utils';\nimport { SchemaValidatorFactory } from '../validator.factory';\nimport { Widget } from '../widget';\n\nexport abstract class FormProperty {\n  schemaValidator: (value: SFValue) => ErrorData[];\n  schema: SFSchema;\n  ui: SFUISchema | SFUISchemaItemRun;\n  formData: {};\n  _value: SFValue = null;\n  widget: Widget<FormProperty>;\n  private _errors: ErrorData[] = null;\n  protected _objErrors: { [key: string]: ErrorData[] } = {};\n  private _valueChanges = new BehaviorSubject<SFValue>(null);\n  private _errorsChanges = new BehaviorSubject<ErrorData[]>(null);\n  private _visible = true;\n  private _visibilityChanges = new BehaviorSubject<boolean>(true);\n  private _root: PropertyGroup;\n  private _parent: PropertyGroup;\n  private _path: string;\n\n  constructor(\n    schemaValidatorFactory: SchemaValidatorFactory,\n    schema: SFSchema,\n    ui: SFUISchema | SFUISchemaItem,\n    formData: {},\n    parent: PropertyGroup,\n    path: string,\n    private options: DelonFormConfig,\n  ) {\n    this.schema = schema;\n    this.ui = ui;\n    this.schemaValidator = schemaValidatorFactory.createValidatorFn(schema, {\n      ingoreKeywords: this.ui.ingoreKeywords as string[],\n    });\n    this.formData = formData || schema.default;\n    this._parent = parent;\n    if (parent) {\n      this._root = parent.root;\n    } else if (this instanceof PropertyGroup) {\n      this._root = this as PropertyGroup;\n    }\n    this._path = path;\n  }\n\n  get valueChanges() {\n    return this._valueChanges;\n  }\n\n  get errorsChanges() {\n    return this._errorsChanges;\n  }\n\n  get type(): string {\n    return this.schema.type;\n  }\n\n  get parent(): PropertyGroup {\n    return this._parent;\n  }\n\n  get root(): PropertyGroup {\n    // tslint:disable-next-line:no-any\n    return this._root || (this as any) as PropertyGroup;\n  }\n\n  get path(): string {\n    return this._path;\n  }\n\n  get value(): SFValue {\n    return this._value;\n  }\n\n  get errors(): ErrorData[] {\n    return this._errors;\n  }\n\n  get visible() {\n    return this._visible;\n  }\n\n  get valid() {\n    return this._errors === null;\n  }\n\n  /**\n   * è®¾ç½®å¼\n   *\n   * @param onlySelf `true` åªå¯¹å½åå­æ®µæ´æ°å¼åæ ¡éªï¼`false` åå«ä¸çº§å­æ®µ\n   */\n  abstract setValue(value: SFValue, onlySelf: boolean): void;\n\n  /**\n   * éç½®å¼ï¼é»è®¤å¼ä¸º `schema.default`\n   *\n   * @param onlySelf `true` åªå¯¹å½åå­æ®µæ´æ°å¼åæ ¡éªï¼`false` åå«ä¸çº§å­æ®µ\n   */\n  abstract resetValue(value: SFValue, onlySelf: boolean): void;\n\n  /**\n   * @internal\n   */\n  abstract _hasValue(): boolean;\n\n  /**\n   *  @internal\n   */\n  abstract _updateValue(): void;\n\n  /**\n   * æ´æ°å¼ä¸æ ¡éªæ°æ®\n   *\n   * @param [onlySelf=false] æ¯å¦åå«ä¸çº§å­æ®µ\n   * @param [emitValueEvent=true] æ¯å¦è§¦åå¼åæ´éç¥\n   */\n  updateValueAndValidity(\n    onlySelf = false,\n    emitValueEvent = true,\n    emitValidator = true,\n  ) {\n    this._updateValue();\n\n    if (emitValueEvent) {\n      this.valueChanges.next(this.value);\n    }\n\n    // `emitValidator` æ¯ä¸æ¬¡æ°æ®åæ´å·²ç»åå«å®æ´éè¯¯é¾è·¯ï¼åç»­ç¶èç¹æ°æ®åæ´æ é¡»åè§¦åæ ¡éª\n    if (emitValidator && this.ui.liveValidate === true) {\n      this._runValidation();\n    }\n\n    if (this.parent && !onlySelf) {\n      this.parent.updateValueAndValidity(onlySelf, emitValueEvent, false);\n    }\n  }\n\n  /** æ ¹æ®è·¯å¾æç´¢è¡¨åå±æ§ */\n  searchProperty(path: string): FormProperty {\n    let prop: FormProperty = this;\n    let base: PropertyGroup = null;\n\n    let result = null;\n    if (path[0] === '/') {\n      base = this.findRoot();\n      result = base.getProperty(path.substr(1));\n    } else {\n      while (result === null && prop.parent !== null) {\n        prop = base = prop.parent;\n        result = base.getProperty(path);\n      }\n    }\n    return result;\n  }\n\n  /** æ¥æ¾æ ¹è¡¨åå±æ§ */\n  findRoot(): PropertyGroup {\n    let property: FormProperty = this;\n    while (property.parent !== null) {\n      property = property.parent;\n    }\n    return property as PropertyGroup;\n  }\n\n  // #region process errors\n\n  private isEmptyData(value: {}) {\n    if (isBlank(value)) return true;\n    switch (this.type) {\n      case 'string':\n        return ('' + value).length === 0;\n    }\n    return false;\n  }\n\n  /**\n   * @internal\n   */\n  _runValidation() {\n    let errors: ErrorData[];\n    // The definition of some rules:\n    // 1. Should not ajv validator when is empty data and required fields\n    // 2. Should not ajv validator when is empty data\n    const isEmpty = this.isEmptyData(this._value);\n    if (isEmpty && this.ui._required) {\n      errors = [{ keyword: 'required' }];\n    } else if (isEmpty) {\n      errors = [];\n    } else {\n      errors = this.schemaValidator(this._value) || [];\n    }\n    const customValidator = (this.ui as SFUISchemaItemRun).validator;\n    if (typeof customValidator === 'function') {\n      const customErrors = customValidator(this.value, this, this.findRoot());\n      if (customErrors instanceof Observable) {\n        customErrors.subscribe(res => {\n          this.setCustomErrors(errors, res);\n          this.widget.detectChanges();\n        });\n        return;\n      }\n      this.setCustomErrors(errors, customErrors);\n      return;\n    }\n\n    this._errors = errors;\n    this.setErrors(this._errors);\n  }\n\n  private setCustomErrors(errors: ErrorData[], list: ErrorData[]) {\n    // fix error format\n    const hasCustomError = list != null && list.length > 0;\n    if (hasCustomError) {\n      list.forEach((err, idx: number) => {\n        if (!err.message)\n          throw new Error(\n            `èªå®ä¹æ ¡éªå¨å¿é¡»è³å°è¿åä¸ä¸ª 'message' å±æ§ï¼ç¨äºè¡¨ç¤ºéè¯¯ææ¬`,\n          );\n        err._custom = true;\n      });\n    }\n    this._errors = this.mergeErrors(errors, list);\n    this.setErrors(this._errors);\n  }\n\n  private mergeErrors(errors: ErrorData[], newErrors: ErrorData | ErrorData[]) {\n    if (newErrors) {\n      if (Array.isArray(newErrors)) {\n        errors = errors.concat(...newErrors);\n      } else {\n        errors.push(newErrors);\n      }\n    }\n    return errors;\n  }\n\n  protected setErrors(errors: ErrorData[], emitFormat = true) {\n    if (emitFormat && errors && !this.ui.onlyVisual) {\n      errors = errors.map((err: ErrorData) => {\n        let message =\n          err._custom === true && err.message\n            ? err.message\n            : (this.ui.errors || {})[err.keyword] ||\n            this.options.errors[err.keyword] ||\n            ``;\n\n        if (message && typeof message === 'function')\n          message = message(err) as string;\n\n        if (message) {\n          if (~(message as string).indexOf('{')) {\n            message = (message as string).replace(\n              /{([\\.a-z0-9]+)}/g,\n              (v: string, key: string) => err.params[key] || '',\n            );\n          }\n          err.message = message as string;\n        }\n        return err;\n      });\n    }\n    this._errors = errors;\n    this._errorsChanges.next(errors);\n    // Should send errors to parent field\n    if (this._parent) {\n      this._parent.setParentAndPlatErrors(errors, this.path);\n    }\n  }\n\n  setParentAndPlatErrors(errors: ErrorData[], path: string) {\n    this._objErrors[path] = errors;\n    const platErrors: ErrorData[] = [];\n    Object.keys(this._objErrors).forEach(p => {\n      const property = this.searchProperty(p);\n      if (property && !property.visible) return;\n      platErrors.push(...this._objErrors[p]);\n    });\n    this.setErrors(platErrors, false);\n  }\n\n  // #endregion\n\n  // #region condition\n\n  private setVisible(visible: boolean) {\n    this._visible = visible;\n    this._visibilityChanges.next(visible);\n    // é¨åæ°æ®æºæ¥èª reset\n    this.resetValue(this.value, true);\n  }\n\n  // A field is visible if AT LEAST ONE of the properties it depends on is visible AND has a value in the list\n  _bindVisibility() {\n    const visibleIf = (this.ui as SFUISchemaItem).visibleIf;\n    if (typeof visibleIf === 'object' && Object.keys(visibleIf).length === 0) {\n      this.setVisible(false);\n    } else if (visibleIf !== undefined) {\n      const propertiesBinding: Array<Observable<boolean>> = [];\n      for (const dependencyPath in visibleIf) {\n        if (visibleIf.hasOwnProperty(dependencyPath)) {\n          const property = this.searchProperty(dependencyPath);\n          if (property) {\n            const valueCheck = property.valueChanges.pipe(\n              map((value: SFValue) => {\n                const vi = visibleIf[dependencyPath];\n                if (typeof vi === 'function') return vi(value);\n                if (vi.indexOf('$ANY$') !== -1) {\n                  return value.length > 0;\n                } else {\n                  return vi.indexOf(value) !== -1;\n                }\n              }),\n            );\n            const visibilityCheck = property._visibilityChanges;\n            const and = combineLatest(\n              valueCheck, visibilityCheck,\n            ).pipe(map(results => results[0] && results[1]));\n            propertiesBinding.push(and);\n          } else {\n            console.warn(\n              `Can't find property ${dependencyPath} for visibility check of ${\n              this.path\n              }`,\n            );\n          }\n        }\n      }\n\n      combineLatest(propertiesBinding)\n        .pipe(\n          map(values => values.indexOf(true) !== -1),\n          distinctUntilChanged(),\n        )\n        .subscribe(visible => this.setVisible(visible));\n    }\n  }\n\n  // #endregion\n}\n\nexport abstract class PropertyGroup extends FormProperty {\n  properties: { [key: string]: FormProperty } | FormProperty[] = null;\n\n  getProperty(path: string) {\n    const subPathIdx = path.indexOf('/');\n    const propertyId = subPathIdx !== -1 ? path.substr(0, subPathIdx) : path;\n\n    let property = this.properties[propertyId];\n    if (\n      property !== null &&\n      subPathIdx !== -1 &&\n      property instanceof PropertyGroup\n    ) {\n      const subPath = path.substr(subPathIdx + 1);\n      property = (property as PropertyGroup).getProperty(subPath);\n    }\n    return property;\n  }\n\n  forEachChild(fn: (formProperty: FormProperty, str: string) => void) {\n    for (const propertyId in this.properties) {\n      if (this.properties.hasOwnProperty(propertyId)) {\n        const property = this.properties[propertyId];\n        fn(property, propertyId);\n      }\n    }\n  }\n\n  forEachChildRecursive(fn: (formProperty: FormProperty) => void) {\n    this.forEachChild(child => {\n      fn(child);\n      if (child instanceof PropertyGroup) {\n        (child as PropertyGroup).forEachChildRecursive(fn);\n      }\n    });\n  }\n\n  _bindVisibility() {\n    super._bindVisibility();\n    this._bindVisibilityRecursive();\n  }\n\n  private _bindVisibilityRecursive() {\n    this.forEachChildRecursive(property => {\n      property._bindVisibility();\n    });\n  }\n\n  isRoot() {\n    return this === this.root;\n  }\n}\n","import { DelonFormConfig } from '../config';\nimport { SFValue } from '../interface';\nimport { SFSchema } from '../schema/index';\nimport { SFUISchema, SFUISchemaItem } from '../schema/ui';\nimport { SchemaValidatorFactory } from '../validator.factory';\nimport { FormProperty, PropertyGroup } from './form.property';\nimport { FormPropertyFactory } from './form.property.factory';\nimport { ObjectProperty } from './object.property';\n\nexport class ArrayProperty extends PropertyGroup {\n  tick = 1;\n\n  constructor(\n    private formPropertyFactory: FormPropertyFactory,\n    schemaValidatorFactory: SchemaValidatorFactory,\n    schema: SFSchema,\n    ui: SFUISchema | SFUISchemaItem,\n    formData: {},\n    parent: PropertyGroup,\n    path: string,\n    options: DelonFormConfig,\n  ) {\n    super(schemaValidatorFactory, schema, ui, formData, parent, path, options);\n    this.properties = [];\n  }\n\n  getProperty(path: string) {\n    const subPathIdx = path.indexOf('/');\n    const pos = +(subPathIdx !== -1 ? path.substr(0, subPathIdx) : path);\n    const list = this.properties as PropertyGroup[];\n    if (isNaN(pos) || pos >= list.length) return undefined;\n    const subPath = path.substr(subPathIdx + 1);\n    return list[pos].getProperty(subPath);\n  }\n\n  setValue(value: SFValue, onlySelf: boolean) {\n    this.properties = [];\n    this.clearErrors();\n    this.resetProperties(value);\n    this.updateValueAndValidity(onlySelf, true);\n  }\n\n  resetValue(value: SFValue, onlySelf: boolean) {\n    this._value = value || this.schema.default || [];\n    this.properties = [];\n    this.clearErrors();\n    this.resetProperties(this._value);\n    this.updateValueAndValidity(onlySelf, true);\n  }\n\n  _hasValue(): boolean {\n    return true;\n  }\n\n  _updateValue() {\n    // tslint:disable-next-line:no-any\n    const value: any[] = [];\n    this.forEachChild((property: ObjectProperty) => {\n      if (property.visible && property._hasValue()) {\n        value.push({ ...property.formData, ...property.value });\n      }\n    });\n    this._value = value;\n  }\n\n  private addProperty(formData: {}) {\n    const newProperty = this.formPropertyFactory.createProperty(\n      this.schema.items,\n      this.ui.$items,\n      formData,\n      this,\n    ) as ObjectProperty;\n    (this.properties as FormProperty[]).push(newProperty);\n    return newProperty;\n  }\n\n  private resetProperties(formDatas: Array<{}>) {\n    for (const item of formDatas) {\n      const property = this.addProperty(item);\n      property.resetValue(item, true);\n    }\n  }\n\n  private clearErrors(path?: string) {\n    if (path) delete this._objErrors[path];\n    else this._objErrors = {};\n  }\n\n  // #region actions\n\n  add(formData: {}): FormProperty {\n    const newProperty = this.addProperty(formData);\n    newProperty.resetValue(formData, false);\n    return newProperty;\n  }\n\n  remove(index: number) {\n    const list = this.properties as FormProperty[];\n    this.clearErrors(list[index].path);\n    list.splice(index, 1);\n    this.updateValueAndValidity(false, true);\n  }\n\n  // #endregion\n}\n","import { SFValue } from '../interface';\nimport { FormProperty } from './form.property';\n\nexport abstract class AtomicProperty extends FormProperty {\n  abstract fallbackValue(): SFValue;\n\n  setValue(value: SFValue, onlySelf: boolean) {\n    this._value = value;\n    this.updateValueAndValidity(onlySelf, true);\n  }\n\n  resetValue(value: SFValue, onlySelf: boolean) {\n    if (value == null) {\n      if (this.schema.default !== undefined) {\n        value = this.schema.default;\n      } else {\n        value = this.fallbackValue();\n      }\n    }\n    this._value = value;\n\n    this.updateValueAndValidity(onlySelf, true);\n\n    if (this.widget) this.widget.reset(value);\n  }\n\n  _hasValue(): boolean {\n    return this.fallbackValue() !== this.value;\n  }\n\n  _updateValue() { }\n}\n","import { SFValue } from '../interface';\nimport { AtomicProperty } from './atomic.property';\n\nexport class BooleanProperty extends AtomicProperty {\n  fallbackValue(): SFValue {\n    return null;\n  }\n}\n","import { SFValue } from '../interface';\nimport { AtomicProperty } from './atomic.property';\n\nexport class NumberProperty extends AtomicProperty {\n  fallbackValue() {\n    return null;\n  }\n\n  setValue(value: SFValue, onlySelf: boolean) {\n    if (typeof value === 'string') {\n      if (value.length) {\n        value = value.indexOf('.') > -1 ? parseFloat(value) : parseInt(value, 10);\n      } else {\n        value = undefined;\n      }\n    }\n    this._value = value;\n    this.updateValueAndValidity(onlySelf, true);\n  }\n}\n","import { DelonFormConfig } from '../config';\nimport { SFValue } from '../interface';\nimport { SFSchema } from '../schema/index';\nimport { SFUISchema, SFUISchemaItem } from '../schema/ui';\nimport { orderProperties } from '../utils';\nimport { SchemaValidatorFactory } from '../validator.factory';\nimport { PropertyGroup } from './form.property';\nimport { FormPropertyFactory } from './form.property.factory';\n\nexport class ObjectProperty extends PropertyGroup {\n  private _propertiesId: string[] = [];\n\n  get propertiesId() {\n    return this._propertiesId;\n  }\n\n  constructor(\n    private formPropertyFactory: FormPropertyFactory,\n    schemaValidatorFactory: SchemaValidatorFactory,\n    schema: SFSchema,\n    ui: SFUISchema | SFUISchemaItem,\n    formData: {},\n    parent: PropertyGroup,\n    path: string,\n    options: DelonFormConfig,\n  ) {\n    super(schemaValidatorFactory, schema, ui, formData, parent, path, options);\n    this.createProperties();\n  }\n\n  private createProperties() {\n    this.properties = {};\n    this._propertiesId = [];\n    let orderedProperties: string[];\n    try {\n      orderedProperties = orderProperties(\n        Object.keys(this.schema.properties),\n        this.ui.order as string[],\n      );\n    } catch (e) {\n      console.error(\n        `Invalid ${this.schema.title || 'root'} object field configuration:`,\n        e,\n      );\n    }\n    orderedProperties.forEach(propertyId => {\n      this.properties[propertyId] = this.formPropertyFactory.createProperty(\n        this.schema.properties[propertyId],\n        this.ui['$' + propertyId],\n        (this.formData || {})[propertyId],\n        this,\n        propertyId,\n      );\n      this._propertiesId.push(propertyId);\n    });\n  }\n\n  setValue(value: SFValue, onlySelf: boolean) {\n    for (const propertyId in value) {\n      if (value.hasOwnProperty(propertyId)) {\n        this.properties[propertyId].setValue(value[propertyId], true);\n      }\n    }\n    this.updateValueAndValidity(onlySelf, true);\n  }\n\n  resetValue(value: SFValue, onlySelf: boolean) {\n    value = value || this.schema.default || {};\n    // tslint:disable-next-line:forin\n    for (const propertyId in this.schema.properties) {\n      this.properties[propertyId].resetValue(value[propertyId], true);\n    }\n    this.updateValueAndValidity(onlySelf, true);\n  }\n\n  _hasValue(): boolean {\n    return this.value != null && !!Object.keys(this.value).length;\n  }\n\n  _updateValue() {\n    const value: SFValue = {};\n    this.forEachChild((property, propertyId) => {\n      if (property.visible && property._hasValue()) {\n        value[propertyId] = property.value;\n      }\n    });\n    this._value = value;\n  }\n}\n","import { SFValue } from '../interface';\nimport { AtomicProperty } from './atomic.property';\n\nexport class StringProperty extends AtomicProperty {\n  fallbackValue() {\n    return null;\n  }\n\n  setValue(value: SFValue, onlySelf: boolean) {\n    this._value = value == null ? '' : value;\n    this.updateValueAndValidity(onlySelf, true);\n  }\n}\n","import { DelonFormConfig } from '../config';\nimport { SFSchema } from '../schema';\nimport { SFUISchema, SFUISchemaItem } from '../schema/ui';\nimport { retrieveSchema } from '../utils';\nimport { SchemaValidatorFactory } from '../validator.factory';\n\nimport { ArrayProperty } from './array.property';\nimport { BooleanProperty } from './boolean.property';\nimport { FormProperty, PropertyGroup } from './form.property';\nimport { NumberProperty } from './number.property';\nimport { ObjectProperty } from './object.property';\nimport { StringProperty } from './string.property';\n\nexport class FormPropertyFactory {\n  constructor(private schemaValidatorFactory: SchemaValidatorFactory, private options: DelonFormConfig) { }\n\n  createProperty(\n    schema: SFSchema,\n    ui: SFUISchema | SFUISchemaItem,\n    formData: {},\n    parent: PropertyGroup = null,\n    propertyId?: string,\n  ): FormProperty {\n    let newProperty = null;\n    let path = '';\n    if (parent) {\n      path += parent.path;\n      if (parent.parent !== null) {\n        path += '/';\n      }\n      if (parent.type === 'object') {\n        path += propertyId;\n      } else if (parent.type === 'array') {\n        path += (parent as ArrayProperty).tick++;\n      } else {\n        throw new Error(\n          'Instanciation of a FormProperty with an unknown parent type: ' +\n          parent.type,\n        );\n      }\n    } else {\n      path = '/';\n    }\n\n    if (schema.$ref) {\n      const refSchema = retrieveSchema(schema, parent.root.schema.definitions);\n      newProperty = this.createProperty(refSchema, ui, formData, parent, path);\n    } else {\n      // fix required\n      if (\n        propertyId &&\n        ((parent!.schema.required || []) as string[]).indexOf(propertyId) !== -1\n      ) {\n        ui._required = true;\n      }\n      // fix title\n      if (schema.title == null) schema.title = propertyId;\n      // fix date\n      if (\n        (schema.type === 'string' || schema.type === 'number') &&\n        !schema.format &&\n        !(ui as SFUISchemaItem).format\n      ) {\n        if ((ui as SFUISchemaItem).widget === 'date')\n          ui.format =\n            schema.type === 'string'\n              ? this.options.uiDateStringFormat\n              : this.options.uiDateNumberFormat;\n        else if ((ui as SFUISchemaItem).widget === 'time')\n          ui.format =\n            schema.type === 'string'\n              ? this.options.uiTimeStringFormat\n              : this.options.uiTimeNumberFormat;\n      }\n      switch (schema.type) {\n        case 'integer':\n        case 'number':\n          newProperty = new NumberProperty(\n            this.schemaValidatorFactory,\n            schema,\n            ui,\n            formData,\n            parent,\n            path,\n            this.options,\n          );\n          break;\n        case 'string':\n          newProperty = new StringProperty(\n            this.schemaValidatorFactory,\n            schema,\n            ui,\n            formData,\n            parent,\n            path,\n            this.options,\n          );\n          break;\n        case 'boolean':\n          newProperty = new BooleanProperty(\n            this.schemaValidatorFactory,\n            schema,\n            ui,\n            formData,\n            parent,\n            path,\n            this.options,\n          );\n          break;\n        case 'object':\n          newProperty = new ObjectProperty(\n            this,\n            this.schemaValidatorFactory,\n            schema,\n            ui,\n            formData,\n            parent,\n            path,\n            this.options,\n          );\n          break;\n        case 'array':\n          newProperty = new ArrayProperty(\n            this,\n            this.schemaValidatorFactory,\n            schema,\n            ui,\n            formData,\n            parent,\n            path,\n            this.options,\n          );\n          break;\n        default:\n          throw new TypeError(`Undefined type ${schema.type}`);\n      }\n    }\n\n    if (newProperty instanceof PropertyGroup) {\n      this.initializeRoot(newProperty);\n    }\n\n    return newProperty;\n  }\n\n  private initializeRoot(rootProperty: PropertyGroup) {\n    // rootProperty.init();\n    rootProperty._bindVisibility();\n  }\n}\n","import { Subject } from 'rxjs';\n\nexport class TerminatorService {\n  onDestroy: Subject<boolean>;\n\n  constructor() {\n    this.onDestroy = new Subject();\n  }\n\n  destroy() {\n    this.onDestroy.next(true);\n  }\n}\n","import { Inject } from '@angular/core';\nimport { DelonFormConfig } from './config';\nimport { ErrorData } from './errors';\nimport { SFValue } from './interface';\nimport { SFSchema } from './schema';\n\n// tslint:disable-next-line:no-any\ndeclare var Ajv: any;\n\nexport abstract class SchemaValidatorFactory {\n  abstract createValidatorFn(schema: SFSchema, extraOptions: { ingoreKeywords: string[] }): (value: SFSchema) => ErrorData[];\n}\n\nexport class AjvSchemaValidatorFactory extends SchemaValidatorFactory {\n  // tslint:disable-next-line:no-any\n  protected ajv: any;\n\n  constructor(@Inject(DelonFormConfig) private options: DelonFormConfig) {\n    super();\n    this.ajv = new Ajv(\n      {\n        ...options.ajv,\n        errorDataPath: 'property',\n        allErrors: true,\n        jsonPointers: true,\n      },\n    );\n    this.ajv.addFormat(\n      'data-url',\n      /^data:([a-z]+\\/[a-z0-9-+.]+)?;name=(.*);base64,(.*)$/,\n    );\n    this.ajv.addFormat(\n      'color',\n      /^(#?([0-9A-Fa-f]{3}){1,2}\\b|aqua|black|blue|fuchsia|gray|green|lime|maroon|navy|olive|orange|purple|red|silver|teal|white|yellow|(rgb\\(\\s*\\b([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\\b\\s*,\\s*\\b([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\\b\\s*,\\s*\\b([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\\b\\s*\\))|(rgb\\(\\s*(\\d?\\d%|100%)+\\s*,\\s*(\\d?\\d%|100%)+\\s*,\\s*(\\d?\\d%|100%)+\\s*\\)))$/,\n    );\n    this.ajv.addFormat(\n      'mobile',\n      /^(0|\\+?86|17951)?1[0-9]{10}$/,\n    );\n    this.ajv.addFormat(\n      'id-card',\n      /(^\\d{15}$)|(^\\d{17}([0-9]|X)$)/,\n    );\n  }\n\n  createValidatorFn(schema: SFSchema, extraOptions: { ingoreKeywords: string[] }): (value: SFValue) => ErrorData[] {\n    const ingoreKeywords: string[] = [].concat(this.options.ingoreKeywords).concat(extraOptions.ingoreKeywords);\n\n    return (value: SFValue): ErrorData[] => {\n      try {\n        this.ajv.validate(schema, value);\n      } catch (e) {\n        // swallow errors thrown in ajv due to invalid schemas, these\n        // still get displayed\n      }\n      let errors = this.ajv.errors;\n      if (this.options && ingoreKeywords && errors) {\n        errors = errors.filter(w => ingoreKeywords.indexOf(w.keyword) === -1);\n      }\n      return errors;\n    };\n  }\n}\n","import {\n  ComponentFactoryResolver,\n  ComponentRef,\n  Injectable,\n  ViewContainerRef,\n} from '@angular/core';\nimport { FormProperty } from './model/form.property';\nimport { Widget } from './widget';\n\nexport class WidgetRegistry {\n  private widgets: { [type: string]: Widget<FormProperty> } = {};\n\n  private defaultWidget: Widget<FormProperty>;\n\n  // tslint:disable-next-line:no-any\n  setDefault(widget: any) {\n    this.defaultWidget = widget;\n  }\n\n  // tslint:disable-next-line:no-any\n  register(type: string, widget: any) {\n    this.widgets[type] = widget;\n  }\n\n  has(type: string) {\n    return this.widgets.hasOwnProperty(type);\n  }\n\n  getType(type: string): Widget<FormProperty> {\n    if (this.has(type)) {\n      return this.widgets[type];\n    }\n    return this.defaultWidget;\n  }\n}\n\n@Injectable()\nexport class WidgetFactory {\n  constructor(\n    private registry: WidgetRegistry,\n    private resolver: ComponentFactoryResolver,\n  ) { }\n\n  createWidget(\n    container: ViewContainerRef,\n    type: string,\n  ): ComponentRef<Widget<FormProperty>> {\n    if (!this.registry.has(type)) {\n      console.warn(`No widget for type \"${type}\"`);\n    }\n\n    // tslint:disable-next-line:no-any\n    const componentClass = this.registry.getType(type) as any;\n    const componentFactory = this.resolver.resolveComponentFactory<Widget<FormProperty>>(\n      componentClass,\n    );\n    return container.createComponent(componentFactory);\n  }\n}\n","import {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  EventEmitter,\n  Input,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  Output,\n  TemplateRef,\n} from '@angular/core';\nimport { DelonLocaleService } from '@delon/theme';\nimport { deepCopy, InputBoolean } from '@delon/util';\nimport { Subscription } from 'rxjs';\n\nimport { DelonFormConfig } from './config';\nimport { ErrorData } from './errors';\nimport { SFButton } from './interface';\nimport { FormProperty } from './model/form.property';\nimport { FormPropertyFactory } from './model/form.property.factory';\nimport { SFSchema } from './schema/index';\nimport { SFUISchema, SFUISchemaItem, SFUISchemaItemRun } from './schema/ui';\nimport { TerminatorService } from './terminator.service';\nimport { di, resolveIf, retrieveSchema, FORMATMAPS } from './utils';\nimport { SchemaValidatorFactory } from './validator.factory';\nimport { WidgetFactory } from './widget.factory';\n\nexport function useFactory(schemaValidatorFactory: SchemaValidatorFactory, options: DelonFormConfig) {\n  return new FormPropertyFactory(schemaValidatorFactory, options);\n}\n\n@Component({\n  selector: 'sf, [sf]',\n  templateUrl: './sf.component.html',\n  providers: [\n    WidgetFactory,\n    {\n      provide: FormPropertyFactory,\n      useFactory,\n      deps: [SchemaValidatorFactory, DelonFormConfig],\n    },\n    TerminatorService,\n  ],\n  host: {\n    '[class.sf]': 'true',\n    '[class.sf-search]': `mode === 'search'`,\n    '[class.sf-edit]': `mode === 'edit'`,\n  },\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class SFComponent implements OnInit, OnChanges, OnDestroy {\n  private i18n$: Subscription;\n  // tslint:disable-next-line:no-any\n  locale: any = {};\n  private _renders = new Map<string, TemplateRef<void>>();\n  private _item: {};\n  private _valid = true;\n  private _defUi: SFUISchemaItem;\n  private _inited = false;\n\n  rootProperty: FormProperty = null;\n  _formData: {};\n  _btn: SFButton;\n  _schema: SFSchema;\n  _ui: SFUISchema;\n\n  // #region fields\n\n  /** è¡¨åå¸å±ï¼ç­å `nzLayout`ï¼é»è®¤ï¼horizontal */\n  @Input() layout: 'horizontal' | 'vertical' | 'inline' = 'horizontal';\n  /** JSON Schema */\n  @Input() schema: SFSchema;\n  /** UI Schema */\n  @Input() ui: SFUISchema;\n  /** è¡¨åé»è®¤å¼ */\n  @Input() formData: {};\n  /**\n   * æé®\n   * - å¼ä¸º `null` æ `undefined` è¡¨ç¤ºæå¨æ·»å æé®ï¼ä½ä¿çå®¹å¨\n   * - å¼ä¸º `none` è¡¨ç¤ºæå¨æ·»å æé®ï¼ä¸ä¸ä¿çå®¹å¨\n   * - ä½¿ç¨ `spanLabelFixed` åºå®æ ç­¾å®½åº¦æ¶ï¼è¥æ  `render.class` åé»è®¤ä¸ºå±ä¸­ç¶æ\n   */\n  @Input() button: SFButton | 'none' = {};\n  /**\n   * æ¯å¦å®æ¶æ ¡éªï¼é»è®¤ï¼`true`\n   * - `true` æ¯ä¸æ¬¡é½æ ¡éª\n   * - `false` æäº¤æ¶æ ¡éª\n   */\n  @Input() @InputBoolean() liveValidate = true;\n  /** æå®è¡¨å `autocomplete` å¼ */\n  @Input() autocomplete: 'on' | 'off';\n  /** ç«å³æ¾ç¤ºéè¯¯è§è§ */\n  @Input() @InputBoolean() firstVisual = true;\n  /** è¡¨åæ¨¡å¼ */\n  @Input()\n  set mode(value: 'default' | 'search' | 'edit') {\n    switch (value) {\n      case 'search':\n        this.layout = 'inline';\n        this.firstVisual = false;\n        this.liveValidate = false;\n        if (this._btn) this._btn.submit = this._btn.search;\n        break;\n      case 'edit':\n        this.layout = 'horizontal';\n        this.firstVisual = false;\n        this.liveValidate = true;\n        if (this._btn) this._btn.submit = this._btn.edit;\n        break;\n    }\n    this._mode = value;\n  }\n  get mode() {\n    return this._mode;\n  }\n  private _mode: 'default' | 'search' | 'edit';\n\n  /** æ°æ®åæ´æ¶åè° */\n  @Output() readonly formChange = new EventEmitter<{}>();\n  /** æäº¤è¡¨åæ¶åè° */\n  @Output() readonly formSubmit = new EventEmitter<{}>();\n  /** éç½®è¡¨åæ¶åè° */\n  @Output() readonly formReset = new EventEmitter<{}>();\n  /** è¡¨åæ ¡éªç»æåè° */\n  @Output() readonly formError = new EventEmitter<ErrorData[]>();\n  // #endregion\n\n  /** è¡¨åæ ¡éªç¶æ */\n  get valid(): boolean {\n    return this._valid;\n  }\n\n  /** è¡¨åå¼ */\n  // tslint:disable-next-line:no-any\n  get value(): { [key: string]: any } {\n    return this._item;\n  }\n\n  /**\n   * æ ¹æ®è·¯å¾è·åè¡¨ååç´ å±æ§\n   */\n  getProperty(path: string): FormProperty {\n    return this.rootProperty.searchProperty(path);\n  }\n\n  /**\n   * æ ¹æ®è·¯å¾è·åè¡¨ååç´ å½åå¼\n   */\n  // tslint:disable-next-line:no-any\n  getValue(path: string): any {\n    return this.getProperty(path)!.value;\n  }\n\n  /**\n   * æ ¹æ®è·¯å¾è®¾ç½®æä¸ªè¡¨ååç´ å±æ§å¼\n   * @param path è·¯å¾\n   * @param value æ°å¼\n   */\n  // tslint:disable-next-line:no-any\n  setValue(path: string, value: any): this {\n    const item = this.getProperty(path);\n    if (!item) {\n      throw new Error(`Invalid path: ${path}`);\n    }\n    item.resetValue(value, false);\n    return this;\n  }\n\n  onSubmit(e: Event) {\n    e.preventDefault();\n    e.stopPropagation();\n    if (!this.liveValidate) this.validator();\n    if (!this.valid) return;\n    this.formSubmit.emit(this.value);\n  }\n\n  constructor(\n    private formPropertyFactory: FormPropertyFactory,\n    private terminator: TerminatorService,\n    private options: DelonFormConfig,\n    private cdr: ChangeDetectorRef,\n    private i18n: DelonLocaleService,\n  ) {\n    this.liveValidate = options.liveValidate;\n    this.firstVisual = options.firstVisual;\n    this.autocomplete = options.autocomplete;\n    this.i18n$ = this.i18n.change.subscribe(() => {\n      this.locale = this.i18n.getData('sf');\n      if (this._inited) {\n        this.coverButtonProperty();\n        this.cdr.detectChanges();\n      }\n    });\n  }\n\n  private coverProperty() {\n    const isHorizontal = this.layout === 'horizontal';\n    const _schema = deepCopy(this.schema);\n    const { definitions } = _schema;\n\n    const inFn = (\n      schema: SFSchema,\n      parentSchema: SFSchema,\n      uiSchema: SFUISchemaItemRun,\n      parentUiSchema: SFUISchemaItemRun,\n      uiRes: SFUISchemaItemRun,\n    ) => {\n      Object.keys(schema.properties).forEach(key => {\n        const uiKey = `$${key}`;\n        const property = retrieveSchema(\n          schema.properties[key] as SFSchema,\n          definitions,\n        );\n        const ui = {\n          widget: property.type,\n          ...(property.format && FORMATMAPS[property.format]),\n          ...(typeof property.ui === 'string' ? { widget: property.ui } : null),\n          ...(!property.ui && Array.isArray(property.enum) && property.enum.length > 0 ? { widget: 'select' } : null),\n          ...this._defUi,\n          ...(property.ui as SFUISchemaItem),\n          ...uiSchema[uiKey],\n        } as SFUISchemaItemRun;\n        // ç»§æ¿ç¶èç¹å¸å±å±æ§\n        if (isHorizontal) {\n          if (parentUiSchema.spanLabelFixed) {\n            if (!ui.spanLabelFixed) {\n              ui.spanLabelFixed = parentUiSchema.spanLabelFixed;\n            }\n          } else {\n            if (!ui.spanLabel)\n              ui.spanLabel =\n                typeof parentUiSchema.spanLabel === 'undefined'\n                  ? 5\n                  : parentUiSchema.spanLabel;\n            if (!ui.spanControl)\n              ui.spanControl =\n                typeof parentUiSchema.spanControl === 'undefined'\n                  ? 19\n                  : parentUiSchema.spanControl;\n            if (!ui.offsetControl)\n              ui.offsetControl =\n                typeof parentUiSchema.offsetControl === 'undefined'\n                  ? null\n                  : parentUiSchema.offsetControl;\n          }\n        } else {\n          ui.spanLabel = null;\n          ui.spanControl = null;\n          ui.offsetControl = null;\n        }\n        if (ui.widget === 'date' && ui.end != null && parentSchema) {\n          const dateEndProperty = parentSchema.properties[ui.end];\n          if (dateEndProperty) {\n            dateEndProperty.ui = {\n              ...(dateEndProperty.ui as SFUISchemaItem),\n              hidden: true,\n            };\n          } else {\n            ui.end = '';\n          }\n        }\n        ui.hidden = typeof ui.hidden === 'boolean' ? ui.hidden : false;\n\n        uiRes[uiKey] = ui;\n        delete property.ui;\n\n        if (property.items) {\n          uiRes[uiKey].$items = uiRes[uiKey].$items || {};\n          inFn(\n            property.items,\n            property.items,\n            (uiSchema[uiKey] || {}).$items || {},\n            ui,\n            uiRes[uiKey].$items,\n          );\n        }\n\n        if (property.properties && Object.keys(property.properties).length) {\n          inFn(property, schema, uiSchema[uiKey] || {}, ui, uiRes[uiKey]);\n        }\n      });\n    };\n\n    const inIfFn = (schema: SFSchema, ui: SFUISchemaItemRun) => {\n      Object.keys(schema.properties).forEach(key => {\n        const property = schema.properties[key];\n        const uiKey = `$${key}`;\n        resolveIf(property, ui[uiKey]);\n        if (property.items) {\n          inIfFn(property.items, ui[uiKey].$items);\n        }\n        if (property.properties) {\n          inIfFn(property, ui[uiKey]);\n        }\n      });\n    };\n\n    if (this.ui == null) this.ui = {};\n    this._defUi = {\n      onlyVisual: this.options.onlyVisual,\n      size: this.options.size,\n      liveValidate: this.liveValidate,\n      firstVisual: this.firstVisual,\n      ...this.options.ui,\n      ..._schema.ui,\n      ...this.ui['*'],\n    };\n\n    // root\n    this._ui = { ...this._defUi };\n\n    inFn(_schema, _schema, this.ui, this.ui, this._ui);\n\n    // cond\n    resolveIf(_schema, this._ui);\n    inIfFn(_schema, this._ui);\n\n    this._schema = _schema;\n\n    if (this._ui.debug) {\n      di('cover schema & ui', this._ui, _schema);\n    }\n  }\n\n  private coverButtonProperty() {\n    this._btn = {\n      render: { size: 'default' },\n      ...this.locale,\n      ...this.options.button,\n      ...(this.button as SFButton),\n    };\n    const firstKey = Object.keys(this._ui).find(w => w.startsWith('$'));\n    if (this.layout === 'horizontal') {\n      const btnUi = firstKey ? this._ui[firstKey] : this._defUi;\n      if (!this._btn.render.grid) {\n        this._btn.render.grid = {\n          offset: btnUi.spanLabel,\n          span: btnUi.spanControl,\n        };\n      }\n      // fixed label\n      if (this._btn.render.spanLabelFixed == null) {\n        this._btn.render.spanLabelFixed = btnUi.spanLabelFixed;\n      }\n      // åºå®æ ç­¾å®½åº¦æ¶ï¼è¥ä¸æå®æ ·å¼ï¼åé»è®¤å±ä¸­\n      if (\n        !this._btn.render.class &&\n        (typeof btnUi.spanLabelFixed === 'number' && btnUi.spanLabelFixed > 0)\n      ) {\n        this._btn.render.class = 'text-center';\n      }\n    } else {\n      this._btn.render.grid = {};\n    }\n    if (this._mode) {\n      this.mode = this._mode;\n    }\n    if (this._ui.debug) di('button property', this._btn);\n  }\n\n  ngOnInit(): void {\n    this._inited = true;\n    this.validator();\n  }\n\n  ngOnChanges(): void {\n    this.refreshSchema();\n  }\n\n  /** @internal */\n  _addTpl(path: string, templateRef: TemplateRef<void>) {\n    const property = this.rootProperty.searchProperty(path);\n    if (!property) {\n      console.warn(`æªæ¾å°è·¯å¾ï¼${path}`);\n      return;\n    }\n    if (this._renders.has(path)) {\n      console.warn(`å·²ç»å­å¨ç¸åèªå®ä¹è·¯å¾ï¼${path}`);\n      return;\n    }\n    this._renders.set(path, templateRef);\n    const pui: SFUISchemaItemRun = this.rootProperty.searchProperty(path).ui;\n    pui._render = templateRef;\n  }\n\n  private attachCustomRender() {\n    this._renders.forEach((tpl, path) => {\n      const pui: SFUISchemaItemRun = this.rootProperty.searchProperty(path).ui;\n      if (!pui._render) pui._render = tpl;\n    });\n  }\n\n  validator(): this {\n    this.rootProperty._runValidation();\n    const errors = this.rootProperty.errors;\n    this._valid = !(errors && errors.length);\n    if (!this._valid) this.formError.emit(errors);\n    this.cdr.detectChanges();\n    return this;\n  }\n\n  /**\n   * å·æ° Schemaï¼ä¸è¬éè¦å¨æä¿®æ¹ Schema æä¸ªå¼æ¶å¯ä»¥æ¹ä¾¿è°ç¨\n   */\n  refreshSchema(newSchema?: SFSchema, newUI?: SFUISchema): this {\n    if (newSchema) this.schema = newSchema;\n    if (newUI) this.ui = newUI;\n\n    if (!this.schema || typeof this.schema.properties === 'undefined')\n      throw new Error(`Invalid Schema`);\n    if (this.schema.ui && typeof this.schema.ui === 'string')\n      throw new Error(`Don't support string with root ui property`);\n\n    this.schema.type = 'object';\n\n    this._formData = { ...this.formData };\n\n    if (this._inited) this.terminator.destroy();\n\n    this.cleanRootSub();\n\n    this.coverProperty();\n    this.coverButtonProperty();\n\n    this.rootProperty = this.formPropertyFactory.createProperty(\n      this._schema,\n      this._ui,\n      this.formData,\n    );\n    this.attachCustomRender();\n\n    this.rootProperty.valueChanges.subscribe(value => {\n      this._item = { ...this.formData, ...value };\n      this.formChange.emit(this._item);\n    });\n    this.rootProperty.errorsChanges.subscribe(errors => {\n      this._valid = !(errors && errors.length);\n      this.formError.emit(errors);\n      this.cdr.detectChanges();\n    });\n\n    return this.reset();\n  }\n\n  /**\n   * éç½®è¡¨å\n   * @param [emit] æ¯å¦è§¦å `formReset` äºä»¶ï¼é»è®¤ï¼`false`\n   */\n  reset(emit = false): this {\n    this.rootProperty.resetValue(this.formData, false);\n    Promise.resolve().then(() => this.cdr.detectChanges());\n    if (emit) {\n      this.formReset.emit(this.value);\n    }\n    return this;\n  }\n\n  private cleanRootSub() {\n    if (!this.rootProperty) return;\n    this.rootProperty.errorsChanges.unsubscribe();\n    this.rootProperty.valueChanges.unsubscribe();\n  }\n\n  ngOnDestroy(): void {\n    this.cleanRootSub();\n    this.terminator.destroy();\n    this.i18n$.unsubscribe();\n  }\n}\n","import {\n  Component,\n  ComponentRef,\n  Input,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  ViewChild,\n  ViewContainerRef,\n} from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { FormProperty } from './model/form.property';\nimport { SFUISchemaItem } from './schema/ui';\nimport { TerminatorService } from './terminator.service';\nimport { Widget } from './widget';\nimport { WidgetFactory } from './widget.factory';\n\nlet nextUniqueId = 0;\n\n@Component({\n  selector: 'sf-item',\n  template: `<ng-template #target></ng-template>`,\n})\nexport class SFItemComponent implements OnInit, OnChanges, OnDestroy {\n  private ref: ComponentRef<Widget<FormProperty>>;\n  readonly unsubscribe$ = new Subject<void>();\n  widget: Widget<FormProperty> = null;\n\n  @Input() formProperty: FormProperty;\n\n  @ViewChild('target', { read: ViewContainerRef })\n  container: ViewContainerRef;\n\n  constructor(\n    private widgetFactory: WidgetFactory,\n    private terminator: TerminatorService,\n  ) { }\n\n  onWidgetInstanciated(widget: Widget<FormProperty>) {\n    this.widget = widget;\n    const id = `_sf-${nextUniqueId++}`;\n\n    const ui = this.formProperty.ui as SFUISchemaItem;\n    this.widget.formProperty = this.formProperty;\n    this.widget.schema = this.formProperty.schema;\n    this.widget.ui = ui;\n    this.widget.id = id;\n    this.widget.firstVisual = ui.firstVisual;\n    this.formProperty.widget = widget;\n  }\n\n  ngOnInit(): void {\n    this.terminator.onDestroy.subscribe(() => this.ngOnDestroy());\n  }\n\n  ngOnChanges(): void {\n    this.ref = this.widgetFactory.createWidget(\n      this.container,\n      (this.formProperty.ui.widget || this.formProperty.schema.type) as string,\n    );\n    this.onWidgetInstanciated(this.ref.instance);\n  }\n\n  ngOnDestroy(): void {\n    const { unsubscribe$ } = this;\n    unsubscribe$.next();\n    unsubscribe$.complete();\n    this.ref.destroy();\n  }\n}\n","import {\n  AfterViewInit,\n  Directive,\n  ElementRef,\n  Input,\n  OnChanges,\n  Renderer2,\n} from '@angular/core';\nimport { InputNumber } from '@delon/util';\n\n@Directive({ selector: '[fixed-label]' })\nexport class SFFixedDirective implements AfterViewInit, OnChanges {\n  private el: HTMLDivElement;\n  private _inited = false;\n\n  @Input('fixed-label')\n  @InputNumber()\n  num: number;\n\n  private init() {\n    if (!this._inited || this.num == null || this.num <= 0) return;\n    const widgetEl = this.el.querySelector('.ant-row') || this.el;\n    this.render.addClass(widgetEl, 'sf__fixed');\n    const labelEl = widgetEl.querySelector('.ant-form-item-label');\n    const unit = this.num + 'px';\n    if (labelEl) {\n      this.render.setStyle(labelEl, 'width', unit);\n      this.render.setStyle(labelEl, 'flex', `0 0 ${unit}`);\n    } else {\n      const controlEl = widgetEl.querySelector('.ant-form-item-control-wrapper');\n      this.render.setStyle(controlEl, 'margin-left', unit);\n    }\n  }\n\n  constructor(er: ElementRef, private render: Renderer2) {\n    this.el = er.nativeElement as HTMLDivElement;\n  }\n\n  ngAfterViewInit(): void {\n    this._inited = true;\n    this.init();\n  }\n\n  ngOnChanges(): void {\n    if (this._inited) this.init();\n  }\n}\n","import { Component, Input } from '@angular/core';\nimport { SFSchema } from './schema/index';\nimport { SFUISchemaItem } from './schema/ui';\n\n@Component({\n  selector: 'sf-item-wrap',\n  templateUrl: './sf-item-wrap.component.html',\n})\nexport class SFItemWrapComponent {\n  @Input() id: string;\n  @Input() schema: SFSchema;\n  @Input() ui: SFUISchemaItem;\n  @Input() showError: boolean;\n  @Input() error: string;\n  @Input() showTitle: boolean;\n  @Input() title: string = null;\n\n  get t() {\n    return this.title === null ? this.schema.title : this.title;\n  }\n}\n","import { Directive, Input, OnInit, TemplateRef } from '@angular/core';\nimport { SFComponent } from '../../sf.component';\n\n@Directive({\n  selector: '[sf-template]',\n})\nexport class SFTemplateDirective implements OnInit {\n  @Input('sf-template') path: string;\n\n  constructor(\n    private templateRef: TemplateRef<void>,\n    private table: SFComponent,\n  ) { }\n\n  ngOnInit(): void {\n    this.table._addTpl(\n      this.path.startsWith('/') ? this.path : `/` + this.path,\n      this.templateRef,\n    );\n  }\n}\n","import {\n  AfterViewInit,\n  ChangeDetectorRef,\n  HostBinding,\n  Inject,\n  Injector,\n} from '@angular/core';\nimport { filter, takeUntil } from 'rxjs/operators';\nimport { ErrorData } from './errors';\nimport { SFValue } from './interface';\nimport { ArrayProperty } from './model/array.property';\nimport { FormProperty } from './model/form.property';\nimport { ObjectProperty } from './model/object.property';\nimport { SFSchema } from './schema';\nimport { SFUISchemaItem } from './schema/ui';\nimport { SFItemComponent } from './sf-item.component';\nimport { SFComponent } from './sf.component';\nimport { di } from './utils';\n\nexport abstract class Widget<T extends FormProperty> implements AfterViewInit {\n  formProperty: T;\n  error: string;\n  showError = false;\n  id = '';\n  schema: SFSchema;\n  ui: SFUISchemaItem;\n  firstVisual = false;\n\n  @HostBinding('class')\n  get cls() {\n    return this.ui.class || '';\n  }\n\n  get disabled(): boolean {\n    if (this.schema.readOnly === true) return true;\n\n    return null;\n  }\n\n  constructor(\n    @Inject(ChangeDetectorRef) public readonly cd: ChangeDetectorRef,\n    @Inject(Injector) public readonly injector: Injector,\n    @Inject(SFItemComponent) public readonly sfItemComp?: SFItemComponent,\n    @Inject(SFComponent) public readonly sfComp?: SFComponent,\n  ) { }\n\n  ngAfterViewInit(): void {\n    this.formProperty.errorsChanges\n      .pipe(takeUntil(this.sfItemComp.unsubscribe$), filter(w => w != null))\n      .subscribe((errors: ErrorData[]) => {\n        if (this.ui.debug) di('errorsChanges', this.formProperty.path, errors);\n\n        // ä¸æ¾ç¤ºé¦æ¬¡æ ¡éªè§è§\n        if (this.firstVisual) {\n          this.showError = errors.length > 0;\n          this.error = this.showError ? errors[0].message : '';\n\n          this.cd.detectChanges();\n        }\n        this.firstVisual = true;\n      });\n  }\n\n  setValue(value: SFValue) {\n    this.formProperty.setValue(value, false);\n    if (this.ui.debug) {\n      di('valueChanges', this.formProperty.path, this.formProperty);\n    }\n  }\n\n  get value() {\n    return this.formProperty.value;\n  }\n\n  detectChanges(onlySelf = false) {\n    if (onlySelf) {\n      this.cd.markForCheck();\n    } else {\n      this.formProperty.root.widget.cd.markForCheck();\n    }\n  }\n\n  abstract reset(value: SFValue);\n}\n\nexport class ControlWidget extends Widget<FormProperty> {\n  reset(value: SFValue) { }\n}\n\nexport class ArrayLayoutWidget extends Widget<ArrayProperty>\n  implements AfterViewInit {\n  reset(value: SFValue) { }\n\n  ngAfterViewInit() {\n    this.formProperty.errorsChanges\n      .pipe(takeUntil(this.sfItemComp.unsubscribe$))\n      .subscribe(() => this.cd.detectChanges());\n  }\n}\n\nexport class ObjectLayoutWidget extends Widget<ObjectProperty>\n  implements AfterViewInit {\n  reset(value: SFValue) { }\n\n  ngAfterViewInit() {\n    this.formProperty.errorsChanges\n      .pipe(takeUntil(this.sfItemComp.unsubscribe$))\n      .subscribe(() => this.cd.detectChanges());\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { FormProperty } from '../../model/form.property';\nimport { ArrayLayoutWidget } from '../../widget';\n\n@Component({\n  selector: 'sf-array',\n  templateUrl: './array.widget.html',\n})\nexport class ArrayWidget extends ArrayLayoutWidget implements OnInit {\n  addTitle: string;\n  addType: string;\n  removeTitle: string;\n  arraySpan = 8;\n\n  get addDisabled() {\n    return (\n      this.schema.maxItems &&\n      (this.formProperty.properties as FormProperty[]).length >= this.schema.maxItems\n    );\n  }\n\n  // tslint:disable-next-line:no-any\n  get l(): any {\n    return this.formProperty.root.widget.sfComp.locale;\n  }\n\n  ngOnInit(): void {\n    if (this.ui.grid && this.ui.grid.arraySpan)\n      this.arraySpan = this.ui.grid.arraySpan;\n\n    this.addTitle = this.ui.addTitle || this.l.addText;\n    this.addType = this.ui.addType || 'dashed';\n    this.removeTitle =\n      this.ui.removable === false ? null : this.ui.removeTitle || this.l.removeText;\n  }\n\n  addItem() {\n    this.formProperty.add(null);\n  }\n\n  removeItem(index: number) {\n    this.formProperty.remove(index);\n  }\n}\n","import { AfterViewInit, Component, ViewChild } from '@angular/core';\nimport { NgModel } from '@angular/forms';\nimport { NzAutocompleteOptionComponent } from 'ng-zorro-antd';\nimport { of, Observable } from 'rxjs';\nimport { debounceTime, flatMap, map, startWith } from 'rxjs/operators';\nimport { SFValue } from '../../interface';\nimport { SFSchemaEnum } from '../../schema';\nimport { getCopyEnum, getEnum, toBool } from '../../utils';\nimport { ControlWidget } from '../../widget';\n\nexport const EMAILSUFFIX = [\n  'qq.com',\n  '163.com',\n  'gmail.com',\n  '126.com',\n  'aliyun.com',\n];\n\n@Component({\n  selector: 'sf-autocomplete',\n  templateUrl: './autocomplete.widget.html',\n})\nexport class AutoCompleteWidget extends ControlWidget implements AfterViewInit {\n  // tslint:disable-next-line:no-any\n  i: any = {};\n  fixData: SFSchemaEnum[] = [];\n  list: Observable<SFSchemaEnum[]>;\n  typing: string = '';\n  @ViewChild(NgModel) private ngModel: NgModel;\n  private filterOption: (input: string, option: SFSchemaEnum) => boolean;\n  private isAsync = false;\n\n  updateValue(item: NzAutocompleteOptionComponent) {\n    this.typing = item.nzLabel;\n    this.setValue(item.nzValue);\n  }\n\n  ngAfterViewInit(): void {\n    this.i = {\n      backfill: toBool(this.ui.backfill, false),\n      defaultActiveFirstOption: toBool(this.ui.defaultActiveFirstOption, true),\n      width: this.ui.width || undefined,\n    };\n\n    this.filterOption = this.ui.filterOption == null ? true : this.ui.filterOption;\n    if (typeof this.filterOption === 'boolean') {\n      this.filterOption = (input: string, option: SFSchemaEnum) =>\n        option.label.toLowerCase().indexOf((input || '').toLowerCase()) > -1;\n    }\n\n    this.isAsync = !!this.ui.asyncData;\n    const orgTime = +(this.ui.debounceTime || 0);\n    const time = Math.max(0, this.isAsync ? Math.max(50, orgTime) : orgTime);\n\n    this.list = this.ngModel.valueChanges.pipe(\n      debounceTime(time),\n      startWith(''),\n      flatMap(input => this.isAsync ? this.ui.asyncData(input) : this.filterData(input)),\n      map(res => getEnum(res, null, this.schema.readOnly)),\n    );\n  }\n\n  reset(value: SFValue) {\n    if (this.isAsync) return;\n    switch (this.ui.type) {\n      case 'email':\n        this.fixData = getCopyEnum(EMAILSUFFIX, null, this.schema.readOnly);\n        break;\n      default:\n        this.fixData = getCopyEnum(\n          this.schema.enum,\n          this.formProperty.formData,\n          this.schema.readOnly,\n        );\n        break;\n    }\n  }\n\n  private filterData(input: string) {\n    switch (this.ui.type) {\n      case 'email':\n        return this.addEmailSuffix(input);\n      default:\n        return of(\n          this.fixData.filter(option => this.filterOption(input, option)),\n        );\n    }\n  }\n\n  private addEmailSuffix(value: string) {\n    return of(\n      !value || ~value.indexOf('@')\n        ? []\n        : this.fixData.map(domain => `${value}@${domain.label}`),\n    );\n  }\n}\n","import { Component } from '@angular/core';\nimport { ControlWidget } from '../../widget';\n\n@Component({\n  selector: 'sf-boolean',\n  template: `\n  <sf-item-wrap [id]=\"id\" [schema]=\"schema\" [ui]=\"ui\" [showError]=\"showError\" [error]=\"error\" [showTitle]=\"schema.title\">\n    <nz-switch\n      [ngModel]=\"value\"\n      (ngModelChange)=\"setValue($event)\"\n      [nzDisabled]=\"disabled\"\n      [nzSize]=\"ui.size\"\n      [nzCheckedChildren]=\"ui.checkedChildren\"\n      [nzUnCheckedChildren]=\"ui.unCheckedChildren\">\n    </nz-switch>\n  </sf-item-wrap>`,\n})\nexport class BooleanWidget extends ControlWidget {}\n","import { Component, OnInit } from '@angular/core';\nimport { SFValue } from '../../interface';\nimport { SFSchemaEnum } from '../../schema';\nimport { getData, toBool } from '../../utils';\nimport { ControlWidget } from '../../widget';\n\n@Component({\n  selector: 'sf-cascader',\n  template: `\n    <sf-item-wrap\n      [id]=\"id\"\n      [schema]=\"schema\"\n      [ui]=\"ui\"\n      [showError]=\"showError\"\n      [error]=\"error\"\n      [showTitle]=\"schema.title\"\n    >\n      <nz-cascader\n        [nzDisabled]=\"disabled\"\n        [nzSize]=\"ui.size\"\n        [ngModel]=\"value\"\n        (ngModelChange)=\"_change($event)\"\n        [nzOptions]=\"data\"\n        [nzAllowClear]=\"ui.allowClear\"\n        [nzAutoFocus]=\"ui.autoFocus\"\n        [nzChangeOn]=\"ui.changeOn\"\n        [nzChangeOnSelect]=\"ui.changeOnSelect\"\n        [nzColumnClassName]=\"ui.columnClassName\"\n        [nzExpandTrigger]=\"ui.expandTrigger\"\n        [nzMenuClassName]=\"ui.menuClassName\"\n        [nzMenuStyle]=\"ui.menuStyle\"\n        [nzLabelProperty]=\"ui.labelProperty || 'label'\"\n        [nzValueProperty]=\"ui.valueProperty || 'value'\"\n        [nzLoadData]=\"loadData\"\n        [nzPlaceHolder]=\"ui.placeholder\"\n        [nzShowArrow]=\"showArrow\"\n        [nzShowInput]=\"showInput\"\n        [nzShowSearch]=\"ui.showSearch\"\n        (nzClear)=\"_clear($event)\"\n        (nzVisibleChange)=\"_visibleChange($event)\"\n        (nzSelect)=\"_select($event)\"\n        (nzSelectionChange)=\"_selectionChange($event)\"\n      >\n      </nz-cascader>\n    </sf-item-wrap>\n  `,\n})\nexport class CascaderWidget extends ControlWidget implements OnInit {\n  clearText: string;\n  showArrow: boolean;\n  showInput: boolean;\n  triggerAction: string[];\n  data: SFSchemaEnum[] = [];\n  // tslint:disable-next-line:no-any\n  loadData: any;\n\n  ngOnInit(): void {\n    this.clearText = this.ui.clearText || 'æ¸é¤';\n    this.showArrow = toBool(this.ui.showArrow, true);\n    this.showInput = toBool(this.ui.showInput, true);\n    this.triggerAction = this.ui.triggerAction || ['click'];\n    if (!!this.ui.asyncData) {\n      // tslint:disable-next-line:no-any\n      this.loadData = (node: any, index: number) => (this.ui.asyncData as any)(node, index, this);\n    }\n  }\n\n  reset(value: SFValue) {\n    getData(this.schema, {}, this.formProperty.formData).subscribe(\n      list => {\n        this.data = list;\n        this.detectChanges();\n      },\n    );\n  }\n\n  _visibleChange(status: boolean) {\n    if (this.ui.visibleChange) this.ui.visibleChange(status);\n  }\n\n  _change(value: string) {\n    this.setValue(value);\n    if (this.ui.change) this.ui.change(value);\n  }\n\n  // tslint:disable-next-line:no-any\n  _selectionChange(options: any) {\n    if (this.ui.selectionChange) this.ui.selectionChange(options);\n  }\n\n  // tslint:disable-next-line:no-any\n  _select(options: any) {\n    if (this.ui.select) this.ui.select(options);\n  }\n\n  // tslint:disable-next-line:no-any\n  _clear(options: any) {\n    if (this.ui.clear) this.ui.clear(options);\n  }\n}\n","import { Component } from '@angular/core';\nimport { SFValue } from '../../interface';\nimport { SFSchemaEnum } from '../../schema';\nimport { getData } from '../../utils';\nimport { ControlWidget } from '../../widget';\n\n@Component({\n  selector: 'sf-checkbox',\n  templateUrl: './checkbox.widget.html',\n})\nexport class CheckboxWidget extends ControlWidget {\n  data: SFSchemaEnum[] = [];\n  allChecked = false;\n  indeterminate = false;\n  grid_span: number;\n  labelTitle = ``;\n  inited = false;\n\n  get l() {\n    return this.formProperty.root.widget.sfComp.locale;\n  }\n\n  reset(value: SFValue) {\n    this.inited = false;\n    getData(this.schema, this.ui, this.formProperty.formData).subscribe(\n      list => {\n        this.data = list;\n        this.allChecked = false;\n        this.indeterminate = false;\n        this.labelTitle = list.length === 0 ? '' : this.schema.title;\n        this.grid_span = this.ui.span && this.ui.span > 0 ? this.ui.span : 0;\n\n        this.updateAllChecked();\n        this.inited = true;\n        this.cd.detectChanges();\n      },\n    );\n  }\n\n  _setValue(value: SFValue) {\n    this.setValue(value);\n    this.detectChanges();\n    this.notifyChange(value);\n  }\n\n  notifySet() {\n    const checkList = this.data.filter(w => w.checked);\n    this.updateAllChecked().setValue(checkList.map(item => item.value));\n    this.notifyChange(checkList);\n  }\n\n  groupInGridChange(values: SFValue[]) {\n    this.data.forEach(\n      item => (item.checked = values.indexOf(item.value) !== -1),\n    );\n    this.notifySet();\n  }\n\n  onAllChecked(e: Event) {\n    e.stopPropagation();\n    this.data.forEach(item => (item.checked = this.allChecked));\n    this.notifySet();\n  }\n\n  updateAllChecked(): this {\n    if (this.data.every(item => item.checked === false)) {\n      this.allChecked = false;\n      this.indeterminate = false;\n    } else if (this.data.every(item => item.checked === true)) {\n      this.allChecked = true;\n      this.indeterminate = false;\n    } else {\n      this.indeterminate = true;\n    }\n    // issues: https://github.com/NG-ZORRO/ng-zorro-antd/issues/2025\n    setTimeout(() => this.detectChanges());\n    return this;\n  }\n\n  private notifyChange(res: boolean | SFSchemaEnum[]) {\n    if (this.ui.change) this.ui.change(res);\n  }\n}\n","import { Component } from '@angular/core';\nimport { ControlWidget } from '../../widget';\n\n@Component({\n  selector: 'sf-custom',\n  template: `\n  <sf-item-wrap [id]=\"id\" [schema]=\"schema\" [ui]=\"ui\" [showError]=\"showError\" [error]=\"error\" [showTitle]=\"schema.title\">\n\n    <ng-template\n      [ngTemplateOutlet]=\"$any(ui)._render\"\n      [ngTemplateOutletContext]=\"{$implicit: this, schema: schema, ui: ui }\"></ng-template>\n\n  </sf-item-wrap>\n  `,\n})\nexport class CustomWidget extends ControlWidget { }\n","import { Component, OnInit } from '@angular/core';\nimport format from 'date-fns/format';\nimport { SFValue } from '../../interface';\nimport { FormProperty } from '../../model/form.property';\nimport { toBool } from '../../utils';\nimport { ControlWidget } from '../../widget';\n\n@Component({\n  selector: 'sf-date',\n  templateUrl: './date.widget.html',\n})\nexport class DateWidget extends ControlWidget implements OnInit {\n  mode: string;\n  displayValue: Date | Date[] = null;\n  displayFormat: string;\n  format: string;\n  // tslint:disable-next-line:no-any\n  i: any;\n  flatRange = false;\n\n  ngOnInit(): void {\n    const ui = this.ui;\n    this.mode = ui.mode || 'date';\n    this.flatRange = ui.end != null;\n    if (this.flatRange) {\n      this.mode = 'range';\n    }\n    if (!ui.displayFormat) {\n      switch (this.mode) {\n        case 'month':\n          this.displayFormat = `yyyy-MM`;\n          break;\n        case 'week':\n          this.displayFormat = `yyyy-ww`;\n          break;\n      }\n    } else {\n      this.displayFormat = ui.displayFormat;\n    }\n    this.format = ui.format ? ui.format : this.schema.type === 'number' ? 'x' : 'YYYY-MM-DD HH:mm:ss';\n    // å¬å±API\n    this.i = {\n      allowClear: toBool(ui.allowClear, true),\n      // nz-date-picker\n      showToday: toBool(ui.showToday, true),\n    };\n  }\n\n  private compCd() {\n    // TODO: removed after nz-datepick support OnPush mode\n    setTimeout(() => this.detectChanges());\n  }\n\n  reset(value: SFValue) {\n    value = this.toDate(value);\n    if (this.flatRange) {\n      this.displayValue = value == null ? [] : [value, this.toDate(this.endProperty.formData)];\n    } else {\n      this.displayValue = value;\n    }\n    this.compCd();\n  }\n\n  _change(value: Date | Date[]) {\n    if (value == null) {\n      this.setValue(null);\n      this.setEnd(null);\n      return;\n    }\n\n    const res = Array.isArray(value) ? value.map(d => format(d, this.format)) : format(value, this.format);\n\n    if (this.flatRange) {\n      this.setEnd(res[1]);\n      this.setValue(res[0]);\n    } else {\n      this.setValue(res);\n    }\n  }\n\n  _openChange(status: boolean) {\n    if (this.ui.onOpenChange) this.ui.onOpenChange(status);\n  }\n\n  // tslint:disable-next-line:no-any\n  _ok(value: any) {\n    if (this.ui.onOk) this.ui.onOk(value);\n  }\n\n  private get endProperty(): FormProperty {\n    return this.formProperty.parent.properties[this.ui.end];\n  }\n\n  private setEnd(value: string) {\n    this.endProperty.setValue(value, true);\n  }\n\n  private toDate(value: SFValue) {\n    if (typeof value === 'number' || (typeof value === 'string' && !isNaN(+value))) {\n      value = new Date(+value);\n    }\n    return value;\n  }\n}\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { NzMentionComponent } from 'ng-zorro-antd';\nimport { Observable } from 'rxjs';\nimport { map, tap } from 'rxjs/operators';\nimport { SFValue } from '../../interface';\nimport { SFSchemaEnum, SFSchemaEnumType } from '../../schema';\nimport { getData, getEnum } from '../../utils';\nimport { ControlWidget } from '../../widget';\n\n@Component({\n  selector: 'sf-mention',\n  template: `\n    <sf-item-wrap [id]=\"id\" [schema]=\"schema\" [ui]=\"ui\" [showError]=\"showError\" [error]=\"error\" [showTitle]=\"schema.title\">\n\n      <nz-mention #mentions\n        [nzSuggestions]=\"data\"\n        [nzValueWith]=\"i.valueWith\"\n        [nzLoading]=\"loading\"\n        [nzNotFoundContent]=\"i.notFoundContent\"\n        [nzPlacement]=\"i.placement\"\n        [nzPrefix]=\"i.prefix\"\n        (nzOnSelect)=\"_select($event)\"\n        (nzOnSearchChange)=\"_search($event)\">\n\n        <ng-container *ngIf=\"ui.inputStyle !== 'textarea'\">\n          <input nzMentionTrigger nz-input\n            [attr.id]=\"id\"\n            [disabled]=\"disabled\"\n            [attr.disabled]=\"disabled\"\n            [nzSize]=\"ui.size\"\n            [ngModel]=\"value\"\n            (ngModelChange)=\"setValue($event)\"\n            [attr.maxLength]=\"schema.maxLength || null\"\n            [attr.placeholder]=\"ui.placeholder\"\n            autocomplete=\"off\">\n        </ng-container>\n\n        <ng-container *ngIf=\"ui.inputStyle === 'textarea'\">\n          <textarea nzMentionTrigger nz-input\n            [attr.id]=\"id\"\n            [disabled]=\"disabled\"\n            [attr.disabled]=\"disabled\"\n            [nzSize]=\"ui.size\"\n            [ngModel]=\"value\"\n            (ngModelChange)=\"setValue($event)\"\n            [attr.maxLength]=\"schema.maxLength || null\"\n            [attr.placeholder]=\"ui.placeholder\"\n            [nzAutosize]=\"i.autosize\">\n          </textarea>\n        </ng-container>\n\n      </nz-mention>\n\n    </sf-item-wrap>\n    `,\n})\nexport class MentionWidget extends ControlWidget implements OnInit {\n  @ViewChild('mentions') mentionChild: NzMentionComponent;\n  data: SFSchemaEnum[] = [];\n  // tslint:disable-next-line:no-any\n  i: any;\n  loading = false;\n\n  ngOnInit(): void {\n    const { valueWith, notFoundContent, placement, prefix, autosize } = this.ui;\n    this.i = {\n      valueWith: valueWith || (item => item.label),\n      notFoundContent: notFoundContent || 'æ å¹éç»æï¼è½»æ²ç©ºæ ¼å®æè¾å¥',\n      placement: placement || 'bottom',\n      prefix: prefix || '@',\n      autosize: typeof autosize === 'undefined' ? true : this.ui.autosize,\n    };\n    const min = typeof this.schema.minimum !== 'undefined' ? this.schema.minimum : -1;\n    const max = typeof this.schema.maximum !== 'undefined' ? this.schema.maximum : -1;\n\n    if (!this.ui.validator && (min !== -1 || max !== -1)) {\n      this.ui.validator = () => {\n        const count = this.mentionChild.getMentions().length;\n        if (min !== -1 && count < min) {\n          return [{ keyword: 'mention', message: `æå°æå ${min} æ¬¡` }];\n        }\n        if (max !== -1 && count > max) {\n          return [{ keyword: 'mention', message: `æå¤æå ${max} æ¬¡` }];\n        }\n        return null;\n      };\n    }\n  }\n\n  reset(value: SFValue) {\n    getData(this.schema, this.ui, null).subscribe(list => {\n      this.data = list;\n      this.detectChanges();\n    });\n  }\n\n  // tslint:disable-next-line:no-any\n  _select(options: any) {\n    if (this.ui.select) this.ui.select(options);\n  }\n\n  // tslint:disable-next-line:no-any\n  _search(option: any) {\n    if (typeof this.ui.loadData !== 'function') return;\n\n    this.loading = true;\n    (this.ui.loadData(option) as Observable<SFSchemaEnumType[]>)\n      .pipe(tap(() => (this.loading = false)), map(res => getEnum(res, null, this.schema.readOnly)))\n      .subscribe(res => {\n        this.data = res;\n        this.cd.detectChanges();\n      });\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ControlWidget } from '../../widget';\n\n@Component({\n  selector: 'sf-number',\n  template: `\n    <sf-item-wrap\n      [id]=\"id\"\n      [schema]=\"schema\"\n      [ui]=\"ui\"\n      [showError]=\"showError\"\n      [error]=\"error\"\n      [showTitle]=\"schema.title\"\n    >\n      <nz-input-number\n        [ngModel]=\"value\"\n        (ngModelChange)=\"_setValue($event)\"\n        [nzDisabled]=\"disabled\"\n        [nzSize]=\"ui.size\"\n        [nzMin]=\"min\"\n        [nzMax]=\"max\"\n        [nzStep]=\"step\"\n        [nzFormatter]=\"formatter\"\n        [nzParser]=\"parser\"\n        [nzPrecision]=\"ui.precision\"\n        [nzPlaceHolder]=\"ui.placeholder || ''\"\n      >\n      </nz-input-number>\n    </sf-item-wrap>\n  `,\n})\nexport class NumberWidget extends ControlWidget implements OnInit {\n  min: number;\n  max: number;\n  step: number;\n  formatter = value => value;\n  parser = value => value;\n\n  ngOnInit(): void {\n    const { schema, ui } = this;\n    if (typeof schema.minimum !== 'undefined') {\n      this.min = schema.exclusiveMinimum ? schema.minimum + 1 : schema.minimum;\n    }\n    if (typeof schema.maximum !== 'undefined') {\n      this.max = schema.exclusiveMaximum ? schema.maximum - 1 : schema.maximum;\n    }\n    this.step = schema.multipleOf || 1;\n    if (schema.type === 'integer') {\n      this.min = Math.trunc(this.min);\n      this.max = Math.trunc(this.max);\n      this.step = Math.trunc(this.step);\n    }\n    if (ui.prefix != null) {\n      ui.formatter = value => `${ui.prefix} ${value}`;\n      ui.parser = value => value.replace(`${ui.prefix} `, '');\n    }\n    if (ui.unit != null) {\n      ui.formatter = value => `${value} ${ui.unit}`;\n      ui.parser = value => value.replace(` ${ui.unit}`, '');\n    }\n    if (ui.formatter) this.formatter = ui.formatter;\n    if (ui.parser) this.parser = ui.parser;\n  }\n\n  _setValue(val: number) {\n    this.setValue(this.schema.type === 'integer' ? Math.floor(val) : val);\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { FormProperty } from '../../model/form.property';\nimport { SFGridSchema } from '../../schema/ui';\nimport { ObjectLayoutWidget } from '../../widget';\n\n@Component({\n  selector: 'sf-object',\n  template: `\n  <ng-container *ngIf=\"grid; else noGrid\">\n    <div nz-row [nzGutter]=\"grid.gutter\">\n      <ng-container *ngFor=\"let i of list\">\n        <ng-container *ngIf=\"i.property.visible && i.show\">\n          <div nz-col\n            [nzSpan]=\"i.grid.span\" [nzOffset]=\"i.grid.offset\"\n            [nzXs]=\"i.grid.xs\" [nzSm]=\"i.grid.sm\" [nzMd]=\"i.grid.md\"\n            [nzLg]=\"i.grid.lg\" [nzXl]=\"i.grid.xl\" [nzXXl]=\"i.grid.xxl\">\n            <sf-item [formProperty]=\"i.property\" [fixed-label]=\"i.spanLabelFixed\"></sf-item>\n          </div>\n        </ng-container>\n      </ng-container>\n    </div>\n  </ng-container>\n  <ng-template #noGrid>\n    <ng-container *ngFor=\"let i of list\">\n      <ng-container *ngIf=\"i.property.visible && i.show\">\n        <sf-item [formProperty]=\"i.property\" [fixed-label]=\"i.spanLabelFixed\"></sf-item>\n      </ng-container>\n    </ng-container>\n  </ng-template>`,\n})\nexport class ObjectWidget extends ObjectLayoutWidget implements OnInit {\n  grid: SFGridSchema;\n  list: Array<{}> = [];\n\n  ngOnInit(): void {\n    this.grid = this.ui.grid;\n    const list: Array<{}> = [];\n    for (const key of this.formProperty.propertiesId) {\n      const property = this.formProperty.properties[key] as FormProperty;\n      const item = {\n        property,\n        grid: property.ui.grid || this.grid || {},\n        spanLabelFixed: property.ui.spanLabelFixed,\n        show: property.ui.hidden === false,\n      };\n      list.push(item);\n    }\n    this.list = list;\n  }\n}\n","import { Component } from '@angular/core';\nimport { SFValue } from '../../interface';\nimport { SFSchemaEnum } from '../../schema/index';\nimport { getData } from '../../utils';\nimport { ControlWidget } from '../../widget';\n\n@Component({\n  selector: 'sf-radio',\n  template: `\n  <sf-item-wrap [id]=\"id\" [schema]=\"schema\" [ui]=\"ui\" [showError]=\"showError\" [error]=\"error\" [showTitle]=\"schema.title\">\n\n    <nz-radio-group\n      [nzDisabled]=\"disabled\"\n      [nzSize]=\"ui.size\"\n      [nzName]=\"id\"\n      [ngModel]=\"value\"\n      (ngModelChange)=\"_setValue($event)\">\n      <ng-container *ngIf=\"styleType\">\n        <label *ngFor=\"let option of data\"\n          nz-radio\n          [nzValue]=\"option.value\"\n          [nzDisabled]=\"option.disabled\">\n          <span [innerHTML]=\"option.label\"></span>\n        </label>\n      </ng-container>\n      <ng-container *ngIf=\"!styleType\">\n        <label *ngFor=\"let option of data\"\n          nz-radio-button\n          [nzValue]=\"option.value\"\n          [nzDisabled]=\"option.disabled\">\n          <span [innerHTML]=\"option.label\"></span>\n        </label>\n      </ng-container>\n    </nz-radio-group>\n\n  </sf-item-wrap>\n  `,\n})\nexport class RadioWidget extends ControlWidget {\n  data: SFSchemaEnum[] = [];\n  styleType: boolean;\n\n  reset(value: SFValue) {\n    this.styleType = (this.ui.styleType || 'default') === 'default';\n    getData(this.schema, this.ui, this.formProperty.formData).subscribe(\n      list => (this.data = list),\n    );\n  }\n\n  _setValue(value: SFValue) {\n    this.setValue(value);\n    if (this.ui.change) this.ui.change(value);\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { toBool } from '../../utils';\nimport { ControlWidget } from '../../widget';\n\n@Component({\n  selector: 'sf-rate',\n  template: `\n  <sf-item-wrap [id]=\"id\" [schema]=\"schema\" [ui]=\"ui\" [showError]=\"showError\" [error]=\"error\" [showTitle]=\"schema.title\">\n\n    <nz-rate\n      [nzDisabled]=\"disabled\"\n      [ngModel]=\"value\"\n      (ngModelChange)=\"setValue($event)\"\n      [nzAllowClear]=\"allowClear\"\n      [nzAllowHalf]=\"allowHalf\"\n      [nzAutoFocus]=\"autoFocus\"\n      [nzCount]=\"count\"></nz-rate>\n    <span *ngIf=\"hasText && formProperty.value\" class=\"ant-rate-text\">{{ genText() }}</span>\n\n  </sf-item-wrap>\n  `,\n})\nexport class RateWidget extends ControlWidget implements OnInit {\n  count: number;\n  allowHalf: boolean;\n  allowClear: boolean;\n  autoFocus: boolean;\n  hasText = false;\n  ngOnInit(): void {\n    this.count = this.schema.maximum || 5;\n    this.allowHalf = (this.schema.multipleOf || 0.5) === 0.5;\n    this.allowClear = toBool(this.ui.allowClear, true);\n    this.autoFocus = toBool(this.ui.autoFocus, false);\n    this.hasText = !!this.ui.text;\n  }\n\n  genText() {\n    return this.hasText\n      ? (this.ui.text as string).replace('{{value}}', this.formProperty.value)\n      : '';\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { SFValue } from '../../interface';\nimport { SFSchemaEnum } from '../../schema';\nimport { getData, toBool } from '../../utils';\nimport { ControlWidget } from '../../widget';\n\n@Component({\n  selector: 'sf-select',\n  template: `\n  <sf-item-wrap [id]=\"id\" [schema]=\"schema\" [ui]=\"ui\" [showError]=\"showError\" [error]=\"error\" [showTitle]=\"schema.title\">\n\n    <nz-select\n      [nzDisabled]=\"disabled\"\n      [nzSize]=\"ui.size\"\n      [ngModel]=\"value\"\n      (ngModelChange)=\"change($event)\"\n      [nzPlaceHolder]=\"ui.placeholder\"\n      [nzAllowClear]=\"i.allowClear\"\n      [nzAutoFocus]=\"i.autoFocus\"\n      [nzDropdownClassName]=\"i.dropdownClassName\"\n      [nzDropdownMatchSelectWidth]=\"i.dropdownMatchSelectWidth\"\n      [nzServerSearch]=\"i.serverSearch\"\n      [nzMaxMultipleCount]=\"i.maxMultipleCount\"\n      [nzMode]=\"i.mode\"\n      [nzNotFoundContent]=\"i.notFoundContent\"\n      [nzShowSearch]=\"i.showSearch\"\n      (nzOpenChange)=\"openChange($event)\"\n      (nzOnSearch)=\"searchChange($event)\"\n      (nzScrollToBottom)=\"scrollToBottom()\">\n      <ng-container *ngIf=\"!hasGroup\">\n        <nz-option\n          *ngFor=\"let o of data\"\n          [nzLabel]=\"o.label\"\n          [nzValue]=\"o.value\"\n          [nzDisabled]=\"o.disabled\">\n        </nz-option>\n      </ng-container>\n      <ng-container *ngIf=\"hasGroup\">\n        <nz-option-group *ngFor=\"let i of data\" [nzLabel]=\"i.label\">\n          <nz-option\n            *ngFor=\"let o of i.children\"\n            [nzLabel]=\"o.label\"\n            [nzValue]=\"o.value\"\n            [nzDisabled]=\"o.disabled\">\n          </nz-option>\n        </nz-option-group>\n      </ng-container>\n    </nz-select>\n\n  </sf-item-wrap>\n  `,\n})\nexport class SelectWidget extends ControlWidget implements OnInit {\n  // tslint:disable-next-line:no-any\n  i: any;\n  data: SFSchemaEnum[];\n  hasGroup = false;\n\n  ngOnInit(): void {\n    this.i = {\n      allowClear: this.ui.allowClear,\n      autoFocus: toBool(this.ui.autoFocus, false),\n      dropdownClassName: this.ui.dropdownClassName || null,\n      dropdownMatchSelectWidth: toBool(this.ui.dropdownMatchSelectWidth, true),\n      serverSearch: toBool(this.ui.serverSearch, false),\n      maxMultipleCount: this.ui.maxMultipleCount || Infinity,\n      mode: this.ui.mode || 'default',\n      notFoundContent: this.ui.notFoundContent || 'æ æ³æ¾å°',\n      showSearch: toBool(this.ui.showSearch, true),\n    };\n  }\n\n  reset(value: SFValue) {\n    getData(this.schema, this.ui, this.formProperty.formData).subscribe(\n      list => {\n        this.data = list;\n        this.hasGroup = list.filter(w => w.group === true).length > 0;\n        this.detectChanges();\n      },\n    );\n  }\n\n  change(values: SFValue) {\n    if (this.ui.change) this.ui.change(values);\n    this.setValue(values);\n  }\n\n  openChange(value: boolean) {\n    if (this.ui.openChange) this.ui.openChange(value);\n  }\n\n  searchChange(text: string) {\n    if (this.ui.onSearch) {\n      this.ui.onSearch(text).then((res: SFSchemaEnum[]) => {\n        this.data = res;\n        this.detectChanges();\n      });\n      return;\n    }\n    this.detectChanges();\n  }\n\n  scrollToBottom() {\n    if (this.ui.scrollToBottom) this.ui.scrollToBottom();\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { Marks, SliderValue } from 'ng-zorro-antd';\nimport { ControlWidget } from '../../widget';\n\n@Component({\n  selector: 'sf-slider',\n  template: `\n  <sf-item-wrap [id]=\"id\" [schema]=\"schema\" [ui]=\"ui\" [showError]=\"showError\" [error]=\"error\" [showTitle]=\"schema.title\">\n\n    <nz-slider\n      [ngModel]=\"value\"\n      (ngModelChange)=\"setValue($event)\"\n      [nzDisabled]=\"disabled\"\n      [nzRange]=\"ui.range\"\n      [nzMin]=\"min\"\n      [nzMax]=\"max\"\n      [nzStep]=\"step\"\n      [nzMarks]=\"marks\"\n      [nzDots]=\"ui.dots\"\n      [nzIncluded]=\"included\"\n      [nzVertical]=\"ui.vertical\"\n      [nzTipFormatter]=\"_formatter\"\n      (nzOnAfterChange)=\"_afterChange($event)\">\n    </nz-slider>\n\n  </sf-item-wrap>\n  `,\n})\nexport class SliderWidget extends ControlWidget implements OnInit {\n  min: number;\n  max: number;\n  step: number;\n  marks: Marks;\n  included: boolean;\n\n  ngOnInit(): void {\n    this.min = this.schema.minimum || 0;\n    this.max = this.schema.maximum || 100;\n    this.step = this.schema.multipleOf || 1;\n\n    this.marks = this.ui.marks || null;\n    const included = this.ui.included;\n    this.included = typeof included === 'undefined' ? true : included;\n  }\n\n  _formatter = (value: number) => {\n    if (this.ui.formatter) return this.ui.formatter(value);\n    return value;\n  }\n\n  _afterChange(value: SliderValue) {\n    if (this.ui.afterChange) this.ui.afterChange(value);\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { SFValue } from '../../interface';\nimport { ControlWidget } from '../../widget';\n\n@Component({\n  selector: 'sf-string',\n  template: `\n  <sf-item-wrap [id]=\"id\" [schema]=\"schema\" [ui]=\"ui\" [showError]=\"showError\" [error]=\"error\" [showTitle]=\"schema.title\">\n\n    <ng-template #ipt>\n      <input nz-input\n        [attr.id]=\"id\"\n        [disabled]=\"disabled\"\n        [attr.disabled]=\"disabled\"\n        [nzSize]=\"ui.size\"\n        [ngModel]=\"value\"\n        (ngModelChange)=\"setValue($event)\"\n        [attr.maxLength]=\"schema.maxLength || null\"\n        [attr.type]=\"ui.type || 'text'\"\n        [attr.placeholder]=\"ui.placeholder\"\n        [attr.autocomplete]=\"ui.autocomplete\"\n        [attr.autoFocus]=\"ui.autofocus\">\n    </ng-template>\n\n    <ng-container *ngIf=\"type === 'addon'; else ipt\">\n      <nz-input-group\n        [nzAddOnBefore]=\"ui.addOnBefore\" [nzAddOnAfter]=\"ui.addOnAfter\"\n        [nzAddOnBeforeIcon]=\"ui.addOnBeforeIcon\" [nzAddOnAfterIcon]=\"ui.addOnAfterIcon\"\n        [nzPrefix]=\"ui.prefix\" [nzPrefixIcon]=\"ui.prefixIcon\"\n        [nzSuffix]=\"ui.suffix\" [nzSuffixIcon]=\"ui.suffixIcon\">\n        <ng-template [ngTemplateOutlet]=\"ipt\"></ng-template>\n      </nz-input-group>\n    </ng-container>\n  </sf-item-wrap>\n  `,\n})\nexport class StringWidget extends ControlWidget implements OnInit {\n  type: string;\n\n  ngOnInit(): void {\n    this.type = !!(\n      this.ui.addOnAfter ||\n      this.ui.addOnBefore ||\n      this.ui.addOnAfterIcon ||\n      this.ui.addOnBeforeIcon ||\n      this.ui.prefix ||\n      this.ui.prefixIcon ||\n      this.ui.suffix ||\n      this.ui.suffixIcon\n    )\n      ? 'addon'\n      : '';\n  }\n\n  reset(value: SFValue) {\n    if (this.schema.format === 'color' && !value) {\n      this.setValue('#000000');\n    }\n  }\n}\n","import { Component } from '@angular/core';\nimport { SFValue } from '../../interface';\nimport { SFSchemaEnum } from '../../schema';\nimport { getData } from '../../utils';\nimport { ControlWidget } from '../../widget';\n\n@Component({\n  selector: 'sf-tag',\n  template: `\n  <sf-item-wrap [id]=\"id\" [schema]=\"schema\" [ui]=\"ui\" [showError]=\"showError\" [error]=\"error\" [showTitle]=\"schema.title\">\n\n    <nz-tag\n      *ngFor=\"let i of data\"\n      nzMode=\"checkable\"\n      [nzChecked]=\"i.checked\"\n      (nzAfterClose)=\"_afterClose()\"\n      (nzOnClose)=\"_close($event)\"\n      (nzCheckedChange)=\"onChange(i)\">\n      {{i.label}}\n    </nz-tag>\n\n  </sf-item-wrap>\n  `,\n})\nexport class TagWidget extends ControlWidget {\n  data: SFSchemaEnum[];\n\n  reset(value: SFValue) {\n    getData(this.schema, this.ui, this.formProperty.formData).subscribe(\n      list => {\n        this.data = list;\n        this.detectChanges();\n      },\n    );\n  }\n\n  onChange(item: SFSchemaEnum) {\n    item.checked = !item.checked;\n    this.updateValue();\n    if (this.ui.checkedChange) this.ui.checkedChange(item.checked);\n  }\n\n  _afterClose() {\n    if (this.ui.afterClose) this.ui.afterClose();\n  }\n\n  _close(e: MouseEvent) {\n    if (this.ui.onClose) this.ui.onClose(e);\n  }\n\n  private updateValue() {\n    this.formProperty.setValue(\n      this.data.filter(w => w.checked).map(i => i.value),\n      false,\n    );\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ControlWidget } from '../../widget';\n\n@Component({\n  selector: 'sf-text',\n  template: `\n  <sf-item-wrap [id]=\"id\" [schema]=\"schema\" [ui]=\"ui\" [showError]=\"showError\" [error]=\"error\" [showTitle]=\"schema.title\">\n    {{ value || ui.defaultText || '-' }}\n  </sf-item-wrap>\n  `,\n})\nexport class TextWidget extends ControlWidget implements OnInit {\n  ngOnInit(): void {\n    this.ui._required = false;\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ControlWidget } from '../../widget';\n\n@Component({\n  selector: 'sf-textarea',\n  template: `\n  <sf-item-wrap [id]=\"id\" [schema]=\"schema\" [ui]=\"ui\" [showError]=\"showError\" [error]=\"error\" [showTitle]=\"schema.title\">\n\n    <textarea nz-input\n      [attr.id]=\"id\"\n      [disabled]=\"disabled\"\n      [attr.disabled]=\"disabled\"\n      [nzSize]=\"ui.size\"\n      [ngModel]=\"value\"\n      (ngModelChange)=\"setValue($event)\"\n      [attr.maxLength]=\"schema.maxLength || null\"\n      [attr.placeholder]=\"ui.placeholder\"\n      [nzAutosize]=\"autosize\">\n    </textarea>\n\n  </sf-item-wrap>`,\n})\nexport class TextareaWidget extends ControlWidget implements OnInit {\n  // tslint:disable-next-line:no-any\n  autosize: any = true;\n\n  ngOnInit(): void {\n    if (this.ui.autosize != null) {\n      this.autosize = this.ui.autosize;\n    }\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport format from 'date-fns/format';\nimport { SFValue } from '../../interface';\nimport { toBool } from '../../utils';\nimport { ControlWidget } from '../../widget';\n\n@Component({\n  selector: 'sf-time',\n  template: `\n  <sf-item-wrap [id]=\"id\" [schema]=\"schema\" [ui]=\"ui\" [showError]=\"showError\" [error]=\"error\" [showTitle]=\"schema.title\">\n\n    <nz-time-picker\n      [(ngModel)]=\"displayValue\"\n      (ngModelChange)=\"_change($event)\"\n      [nzDisabled]=\"disabled\"\n      [nzSize]=\"ui.size\"\n      [nzFormat]=\"i.displayFormat\"\n      [nzAllowEmpty]=\"i.allowEmpty\"\n      [nzClearText]=\"i.clearText\"\n      [nzDefaultOpenValue]=\"i.defaultOpenValue\"\n      [nzDisabledHours]=\"ui.disabledHours\"\n      [nzDisabledMinutes]=\"ui.disabledMinutes\"\n      [nzDisabledSeconds]=\"ui.disabledSeconds\"\n      [nzHideDisabledOptions]=\"i.hideDisabledOptions\"\n      [nzHourStep]=\"i.hourStep\"\n      [nzMinuteStep]=\"i.minuteStep\"\n      [nzSecondStep]=\"i.secondStep\"\n      [nzPopupClassName]=\"ui.popupClassName\"\n      >\n    </nz-time-picker>\n\n  </sf-item-wrap>\n  `,\n})\nexport class TimeWidget extends ControlWidget implements OnInit {\n  displayValue: Date = null;\n  format: string;\n  // tslint:disable-next-line:no-any\n  i: any;\n\n  ngOnInit(): void {\n    const ui = this.ui;\n    this.format = ui.format\n      ? ui.format\n      : this.schema.type === 'number'\n        ? 'x'\n        : 'HH:mm:ss';\n    this.i = {\n      displayFormat: ui.displayFormat || 'HH:mm:ss',\n      allowEmpty: toBool(ui.allowEmpty, true),\n      clearText: ui.clearText || 'æ¸é¤',\n      defaultOpenValue: ui.defaultOpenValue || new Date(),\n      hideDisabledOptions: toBool(ui.hideDisabledOptions, false),\n      hourStep: ui.hourStep || 1,\n      minuteStep: ui.nzMinuteStep || 1,\n      secondStep: ui.secondStep || 1,\n    };\n  }\n\n  private compCd() {\n    // TODO: removed after nz-datepick support OnPush mode\n    setTimeout(() => this.detectChanges());\n  }\n\n  reset(value: SFValue) {\n    if (value instanceof Date) {\n      this.displayValue = value;\n      this.compCd();\n      return;\n    }\n    let v = value != null && value.toString().length ? new Date(value) : null;\n\n    // trying restore full Date format\n    if (v != null && v.toString() === 'Invalid Date') {\n      if (value.toString().split(':').length <= 1) value += ':00';\n      v = new Date(`1970-1-1 ` + value);\n    }\n    this.displayValue = v;\n    this.compCd();\n  }\n\n  _change(value: Date) {\n    if (value == null) {\n      this.setValue(null);\n      return;\n    }\n    if (this.ui.utcEpoch === true) {\n      this.setValue(Date.UTC(1970, 0, 1, value.getHours(), value.getMinutes(), value.getSeconds()));\n      return;\n    }\n    this.setValue(format(value, this.format));\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { TransferCanMove, TransferChange, TransferItem, TransferSearchChange, TransferSelectChange } from 'ng-zorro-antd';\nimport { of, Observable } from 'rxjs';\nimport { SFValue } from '../../interface';\nimport { SFSchemaEnum } from '../../schema';\nimport { getData } from '../../utils';\nimport { ControlWidget } from '../../widget';\n\n@Component({\n  selector: 'sf-transfer',\n  template: `\n  <sf-item-wrap [id]=\"id\" [schema]=\"schema\" [ui]=\"ui\" [showError]=\"showError\" [error]=\"error\" [showTitle]=\"schema.title\">\n\n    <nz-transfer\n      [nzDataSource]=\"list\"\n      [nzTitles]=\"i.titles\"\n      [nzOperations]=\"i.operations\"\n      [nzListStyle]=\"ui.listStyle\"\n      [nzItemUnit]=\"i.itemUnit\"\n      [nzItemsUnit]=\"i.itemsUnit\"\n      [nzShowSearch]=\"ui.showSearch\"\n      [nzFilterOption]=\"ui.filterOption\"\n      [nzSearchPlaceholder]=\"ui.searchPlaceholder\"\n      [nzNotFoundContent]=\"ui.notFoundContent\"\n      [nzCanMove]=\"_canMove\"\n      (nzChange)=\"_change($event)\"\n      (nzSearchChange)=\"_searchChange($event)\"\n      (nzSelectChange)=\"_selectChange($event)\">\n    </nz-transfer>\n\n  </sf-item-wrap>\n  `,\n})\nexport class TransferWidget extends ControlWidget implements OnInit {\n  list: SFSchemaEnum[] = [];\n  // tslint:disable-next-line:no-any\n  i: any;\n  private _data: SFSchemaEnum[] = [];\n\n  ngOnInit(): void {\n    this.i = {\n      titles: this.ui.titles || ['', ''],\n      operations: this.ui.operations || ['', ''],\n      itemUnit: this.ui.itemUnit || 'é¡¹',\n      itemsUnit: this.ui.itemsUnit || 'é¡¹',\n    };\n  }\n\n  reset(value: SFValue) {\n    getData(this.schema, this.ui, null).subscribe(list => {\n      let formData = this.formProperty.formData;\n      if (!Array.isArray(formData)) formData = [formData];\n      list.forEach((item: SFSchemaEnum) => {\n        // tslint:disable-next-line:no-any\n        if (~(formData as any[]).indexOf(item.value)) item.direction = 'right';\n      });\n      this.list = list;\n      this._data = list.filter(w => w.direction === 'right');\n      this.notify();\n      this.detectChanges();\n    });\n  }\n\n  private notify() {\n    this.formProperty.setValue(this._data.map(i => i.value), false);\n  }\n\n  _canMove = (arg: TransferCanMove): Observable<TransferItem[]> => {\n    return this.ui.canMove ? this.ui.canMove(arg) : of(arg.list);\n  }\n\n  _change(options: TransferChange) {\n    if (options.to === 'right') {\n      this._data = this._data.concat(...options.list);\n    } else {\n      // tslint:disable-next-line:no-any\n      this._data = this._data.filter((w: any) => options.list.indexOf(w) === -1);\n    }\n    if (this.ui.change) this.ui.change(options);\n    this.notify();\n  }\n\n  _searchChange(options: TransferSearchChange) {\n    if (this.ui.searchChange) this.ui.searchChange(options);\n  }\n\n  _selectChange(options: TransferSelectChange) {\n    if (this.ui.selectChange) this.ui.selectChange(options);\n    this.cd.detectChanges();\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { deepCopy } from '@delon/util';\nimport { NzFormatEmitEvent, NzTreeNode } from 'ng-zorro-antd';\nimport { map } from 'rxjs/operators';\nimport { SFValue } from '../../interface';\nimport { SFSchemaEnum } from '../../schema';\nimport { getData, toBool } from '../../utils';\nimport { ControlWidget } from '../../widget';\n\n@Component({\n  selector: 'sf-tree-select',\n  template: `\n  <sf-item-wrap [id]=\"id\" [schema]=\"schema\" [ui]=\"ui\" [showError]=\"showError\" [error]=\"error\" [showTitle]=\"schema.title\">\n    <nz-tree-select\n      [nzAllowClear]=\"i.allowClear\"\n      [nzPlaceHolder]=\"ui.placeholder\"\n      [nzDisabled]=\"disabled\"\n      [nzShowSearch]=\"i.showSearch\"\n      [nzDropdownMatchSelectWidth]=\"i.dropdownMatchSelectWidth\"\n      [nzDropdownStyle]=\"ui.dropdownStyle\"\n      [nzMultiple]=\"i.multiple\"\n      [nzSize]=\"ui.size\"\n      [nzCheckable]=\"i.checkable\"\n      [nzShowExpand]=\"i.showExpand\"\n      [nzShowLine]=\"i.showLine\"\n      [nzAsyncData]=\"i.asyncData\"\n      [nzNodes]=\"data\"\n      [nzDefaultExpandAll]=\"i.defaultExpandAll\"\n      [nzDefaultExpandedKeys]=\"i.defaultExpandedKeys\"\n      [nzDisplayWith]=\"i.displayWith\"\n      [ngModel]=\"value\"\n      (ngModelChange)=\"change($event)\"\n      (nzExpandChange)=\"expandChange($event)\">\n    </nz-tree-select>\n\n  </sf-item-wrap>\n  `,\n})\nexport class TreeSelectWidget extends ControlWidget implements OnInit {\n  // tslint:disable-next-line:no-any\n  i: any;\n  data: SFSchemaEnum[] = [];\n\n  private dc() {\n    // Muse wait `nz-tree-select` write values\n    // https://github.com/NG-ZORRO/ng-zorro-antd/issues/2316\n    setTimeout(() => this.detectChanges(), 1000);\n  }\n\n  private tranData(list: SFSchemaEnum[]) {\n    // tslint:disable-next-line:no-any\n    return list.map(node => new NzTreeNode(deepCopy(node) as any));\n  }\n\n  ngOnInit(): void {\n    const { ui } = this;\n    this.i = {\n      allowClear: ui.allowClear,\n      showSearch: toBool(ui.showSearch, false),\n      dropdownMatchSelectWidth: toBool(ui.dropdownMatchSelectWidth, true),\n      multiple: toBool(ui.multiple, false),\n      checkable: toBool(ui.checkable, false),\n      showExpand: toBool(ui.showExpand, true),\n      showLine: toBool(ui.showLine, false),\n      asyncData: typeof ui.expandChange === 'function',\n      defaultExpandAll: toBool(ui.defaultExpandAll, false),\n      defaultExpandedKeys: ui.defaultExpandedKeys || [],\n      displayWith: ui.displayWith || ((node: NzTreeNode) => node.title),\n    };\n  }\n\n  reset(value: SFValue) {\n    getData(this.schema, this.ui, this.formProperty.formData)\n      .pipe(map(list => this.tranData(list)))\n      .subscribe(list => {\n        this.data = list;\n        this.dc();\n      });\n  }\n\n  change(value: string[] | string) {\n    if (this.ui.change) this.ui.change(value);\n    this.setValue(value);\n  }\n\n  expandChange(e: NzFormatEmitEvent) {\n    const { ui } = this;\n    if (typeof ui.expandChange !== 'function') return;\n    ui.expandChange(e)\n      .pipe(map((list: SFSchemaEnum[]) => this.tranData(list)))\n      .subscribe(res => {\n        e.node.clearChildren();\n        e.node.addChildren(res);\n        this.dc();\n      });\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { deepGet } from '@delon/util';\nimport { NzModalService, UploadChangeParam, UploadFile } from 'ng-zorro-antd';\nimport { of } from 'rxjs';\nimport { SFValue } from '../../interface';\nimport { getData, toBool } from '../../utils';\nimport { ControlWidget } from '../../widget';\n\n@Component({\n  selector: 'sf-upload',\n  template: `\n    <sf-item-wrap\n      [id]=\"id\"\n      [schema]=\"schema\"\n      [ui]=\"ui\"\n      [showError]=\"showError\"\n      [error]=\"error\"\n      [showTitle]=\"schema.title\"\n    >\n      <nz-upload\n        [nzType]=\"i.type\"\n        [nzFileList]=\"fileList\"\n        [nzDisabled]=\"disabled\"\n        [nzAction]=\"i.action\"\n        [nzDirectory]=\"i.directory\"\n        [nzOpenFileDialogOnClick]=\"i.openFileDialogOnClick\"\n        [nzAccept]=\"i.accept\"\n        [nzLimit]=\"i.limit\"\n        [nzFilter]=\"i.filter\"\n        [nzSize]=\"i.size\"\n        [nzFileType]=\"i.fileType\"\n        [nzHeaders]=\"ui.headers\"\n        [nzData]=\"ui.data\"\n        [nzListType]=\"i.listType\"\n        [nzMultiple]=\"i.multiple\"\n        [nzName]=\"i.name\"\n        [nzShowUploadList]=\"i.showUploadList\"\n        [nzWithCredentials]=\"i.withCredentials\"\n        [nzBeforeUpload]=\"i.beforeUpload\"\n        [nzCustomRequest]=\"i.customRequest\"\n        [nzRemove]=\"ui.remove\"\n        [nzPreview]=\"handlePreview\"\n        (nzChange)=\"change($event)\"\n      >\n        <ng-container [ngSwitch]=\"btnType\">\n          <ng-container *ngSwitchCase=\"'plus'\">\n            <i nz-icon type=\"plus\"></i>\n            <div class=\"ant-upload-text\" [innerHTML]=\"i.text\"></div>\n          </ng-container>\n          <ng-container *ngSwitchCase=\"'drag'\">\n            <p class=\"ant-upload-drag-icon\"><i nz-icon type=\"inbox\"></i></p>\n            <p class=\"ant-upload-text\" [innerHTML]=\"i.text\"></p>\n            <p class=\"ant-upload-hint\" [innerHTML]=\"i.hint\"></p>\n          </ng-container>\n          <ng-container *ngSwitchDefault>\n            <button type=\"button\" nz-button>\n              <i nz-icon type=\"upload\"></i><span [innerHTML]=\"i.text\"></span>\n            </button>\n          </ng-container>\n        </ng-container>\n      </nz-upload>\n    </sf-item-wrap>\n  `,\n})\nexport class UploadWidget extends ControlWidget implements OnInit {\n  // tslint:disable-next-line:no-any\n  i: any;\n  fileList: UploadFile[] = [];\n  btnType = '';\n\n  ngOnInit(): void {\n    const {\n      type,\n      text,\n      action,\n      accept,\n      limit,\n      filter,\n      fileSize,\n      fileType,\n      listType,\n      multiple,\n      name,\n      showUploadList,\n      withCredentials,\n      resReName,\n      beforeUpload,\n      customRequest,\n      directory,\n      openFileDialogOnClick,\n    } = this.ui;\n    this.i = {\n      type: type || 'select',\n      text: text || 'ç¹å»ä¸ä¼ ',\n      action: action || '',\n      accept: accept || '',\n      directory: toBool(directory, false),\n      openFileDialogOnClick: toBool(openFileDialogOnClick, true),\n      limit: limit == null ? 0 : +limit,\n      filter: filter == null ? [] : filter,\n      size: fileSize == null ? 0 : +fileSize,\n      fileType: fileType || '',\n      listType: listType || 'text',\n      multiple: toBool(multiple, false),\n      name: name || 'file',\n      showUploadList: toBool(showUploadList, true),\n      withCredentials: toBool(withCredentials, false),\n      resReName: (resReName || '').split('.'),\n      beforeUpload: typeof beforeUpload === 'function' ? beforeUpload : null,\n      customRequest: typeof customRequest === 'function' ? customRequest : null,\n    };\n    if (this.i.listType === 'picture-card') {\n      this.btnType = 'plus';\n    }\n    if (this.i.type === 'drag') {\n      this.i.listType = null;\n      this.btnType = 'drag';\n      this.i.text = this.ui.text || `åå»ææå¨æä»¶å°è¯¥åºåä¸ä¼ `;\n      this.i.hint =\n        this.ui.hint || `æ¯æåä¸ªææ¹éï¼ä¸¥ç¦ä¸ä¼ å¬å¸æ°æ®æå¶ä»å®å¨æä»¶`;\n    }\n  }\n\n  change(args: UploadChangeParam) {\n    if (this.ui.change) this.ui.change(args);\n    if (args.type !== 'success') return;\n    this._setValue(args.fileList);\n  }\n\n  reset(value: SFValue) {\n    const { fileList } = this.ui;\n    (fileList\n      ? of(fileList)\n      : getData(this.schema, this.ui, this.formProperty.formData)\n    ).subscribe(list => {\n      this.fileList = list as UploadFile[];\n      this._setValue(this.fileList);\n      this.detectChanges();\n    });\n  }\n\n  private _setValue(fileList: UploadFile[]) {\n    const res = fileList.map(item =>\n      deepGet(item.response, this.i.resReName, item.response),\n    );\n    this.setValue(this.i.multiple === true ? res : res.pop());\n  }\n\n  handlePreview = (file: UploadFile) => {\n    if (this.ui.preview) {\n      this.ui.preview(file);\n      return;\n    }\n    this.injector\n      .get(NzModalService)\n      .create({\n        nzContent: `<img src=\"${file.url ||\n          file.thumbUrl}\" class=\"img-fluid\" />`,\n        nzFooter: null,\n      })\n      .afterClose.subscribe(() => this.detectChanges());\n  }\n}\n","import { WidgetRegistry } from '../widget.factory';\n\nimport { ArrayWidget } from './array/array.widget';\nimport { AutoCompleteWidget } from './autocomplete/autocomplete.widget';\nimport { BooleanWidget } from './boolean/boolean.widget';\nimport { CascaderWidget } from './cascader/cascader.widget';\nimport { CheckboxWidget } from './checkbox/checkbox.widget';\nimport { CustomWidget } from './custom/custom.widget';\nimport { DateWidget } from './date/date.widget';\nimport { MentionWidget } from './mention/mention.widget';\nimport { NumberWidget } from './number/number.widget';\nimport { ObjectWidget } from './object/object.widget';\nimport { RadioWidget } from './radio/radio.widget';\nimport { RateWidget } from './rate/rate.widget';\nimport { SelectWidget } from './select/select.widget';\nimport { SliderWidget } from './slider/slider.widget';\nimport { StringWidget } from './string/string.widget';\nimport { TagWidget } from './tag/tag.widget';\nimport { TextWidget } from './text/text.widget';\nimport { TextareaWidget } from './textarea/textarea.widget';\nimport { TimeWidget } from './time/time.widget';\nimport { TransferWidget } from './transfer/transfer.widget';\nimport { TreeSelectWidget } from './tree-select/tree-select.widget';\nimport { UploadWidget } from './upload/upload.widget';\n\nexport class NzWidgetRegistry extends WidgetRegistry {\n  constructor() {\n    super();\n\n    this.register('object', ObjectWidget);\n    this.register('array', ArrayWidget);\n\n    this.register('text', TextWidget);\n    this.register('string', StringWidget);\n    this.register('number', NumberWidget);\n    this.register('integer', NumberWidget);\n    this.register('date', DateWidget);\n    this.register('time', TimeWidget);\n    this.register('radio', RadioWidget);\n    this.register('checkbox', CheckboxWidget);\n    this.register('boolean', BooleanWidget);\n    this.register('textarea', TextareaWidget);\n    this.register('select', SelectWidget);\n    this.register('tree-select', TreeSelectWidget);\n    this.register('tag', TagWidget);\n    this.register('upload', UploadWidget);\n    this.register('transfer', TransferWidget);\n    this.register('slider', SliderWidget);\n    this.register('rate', RateWidget);\n    this.register('autocomplete', AutoCompleteWidget);\n    this.register('cascader', CascaderWidget);\n    this.register('mention', MentionWidget);\n    this.register('custom', CustomWidget);\n\n    this.setDefault(StringWidget);\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { ModuleWithProviders, NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { DelonLocaleModule } from '@delon/theme';\nimport { DelonUtilModule } from '@delon/util';\nimport { NgZorroAntdModule } from 'ng-zorro-antd';\n\nimport { SFFixedDirective } from './sf-fixed.directive';\nimport { SFItemWrapComponent } from './sf-item-wrap.component';\nimport { SFItemComponent } from './sf-item.component';\nimport { SFComponent } from './sf.component';\nimport {\n  AjvSchemaValidatorFactory,\n  SchemaValidatorFactory,\n} from './validator.factory';\nimport { SFTemplateDirective } from './widgets/custom/sf-template.directive';\n\nconst COMPONENTS = [\n  SFComponent,\n  SFItemComponent,\n  SFItemWrapComponent,\n  SFTemplateDirective,\n  SFFixedDirective,\n];\n\n// #region widgets\n\nimport { WidgetRegistry } from './widget.factory';\nimport { ArrayWidget } from './widgets/array/array.widget';\nimport { AutoCompleteWidget } from './widgets/autocomplete/autocomplete.widget';\nimport { BooleanWidget } from './widgets/boolean/boolean.widget';\nimport { CascaderWidget } from './widgets/cascader/cascader.widget';\nimport { CheckboxWidget } from './widgets/checkbox/checkbox.widget';\nimport { CustomWidget } from './widgets/custom/custom.widget';\nimport { DateWidget } from './widgets/date/date.widget';\nimport { MentionWidget } from './widgets/mention/mention.widget';\nimport { NumberWidget } from './widgets/number/number.widget';\nimport { NzWidgetRegistry } from './widgets/nz-widget.registry';\nimport { ObjectWidget } from './widgets/object/object.widget';\nimport { RadioWidget } from './widgets/radio/radio.widget';\nimport { RateWidget } from './widgets/rate/rate.widget';\nimport { SelectWidget } from './widgets/select/select.widget';\nimport { SliderWidget } from './widgets/slider/slider.widget';\nimport { StringWidget } from './widgets/string/string.widget';\nimport { TagWidget } from './widgets/tag/tag.widget';\nimport { TextWidget } from './widgets/text/text.widget';\nimport { TextareaWidget } from './widgets/textarea/textarea.widget';\nimport { TimeWidget } from './widgets/time/time.widget';\nimport { TransferWidget } from './widgets/transfer/transfer.widget';\nimport { TreeSelectWidget } from './widgets/tree-select/tree-select.widget';\nimport { UploadWidget } from './widgets/upload/upload.widget';\n\nconst WIDGETS = [\n  ObjectWidget,\n  ArrayWidget,\n  StringWidget,\n  NumberWidget,\n  DateWidget,\n  TimeWidget,\n  RadioWidget,\n  CheckboxWidget,\n  BooleanWidget,\n  TextareaWidget,\n  SelectWidget,\n  TreeSelectWidget,\n  TagWidget,\n  UploadWidget,\n  TransferWidget,\n  SliderWidget,\n  RateWidget,\n  AutoCompleteWidget,\n  CascaderWidget,\n  MentionWidget,\n  CustomWidget,\n  TextWidget,\n];\n\n// #endregion\n\n@NgModule({\n  imports: [CommonModule, FormsModule, DelonUtilModule, DelonLocaleModule, NgZorroAntdModule],\n  declarations: [...COMPONENTS, ...WIDGETS],\n  entryComponents: [...WIDGETS],\n  exports: [...COMPONENTS],\n})\nexport class DelonFormModule {\n  static forRoot(): ModuleWithProviders {\n    return {\n      ngModule: DelonFormModule,\n      providers: [\n        {\n          provide: SchemaValidatorFactory,\n          useClass: AjvSchemaValidatorFactory,\n        },\n        { provide: WidgetRegistry, useClass: NzWidgetRegistry },\n      ],\n    };\n  }\n}\n"]}