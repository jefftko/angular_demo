{"version":3,"sources":["ng://@delon/mock/src/status.error.ts","ng://@delon/mock/src/mock.config.ts","ng://@delon/mock/src/mock.service.ts","node_modules/tslib/tslib.es6.js","ng://@delon/mock/src/mock.interceptor.ts","ng://@delon/mock/src/mock.module.ts"],"names":["MockStatusError","status","error","this","DelonMockConfig","delay","force","log","executeOtherInterceptors","MockService","config","cached","applyMock","data","prototype","realApplyMock","e","outputError","_this","Object","keys","forEach","key","rules","ruleKey","value","Error","rule","genRule","indexOf","method","item","find","w","url","callback","push","sort","a","b","martcher","toString","length","splited","split","toLowerCase","segments","filter","segment","startsWith","map","v","substring","reStr","join","RegExp","test","toUpperCase","filePath","message","errors","stack","line","trim","replace","splice","console","group","warn","groupEnd","getRule","params","list","ret","exec","slice","index","clearCache","defineProperty","ngOnDestroy","Injectable","__assign","assign","t","s","i","n","arguments","p","hasOwnProperty","call","apply","HttpMockInterceptorHandler","next","interceptor","handle","req","intercept","MockInterceptor","injector","res","src","get","mockRequest_1","original","body","queryString","headers","urlParams","itemArr","includes","Array","isArray","HttpErrorResponse","statusText","HttpResponseBase","HttpResponse","res$","throwError","of","interceptors","HTTP_INTERCEPTORS","lastInterceptors","reduceRight","_next","_interceptor","pipe","Injector","DelonMockModule","forRoot","ngModule","providers","provide","useValue","useClass","multi","forChild","NgModule","args"],"mappings":"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","sourcesContent":["export class MockStatusError {\n  statusText: string;\n  // tslint:disable-next-line:no-any\n  constructor(public status: number, public error?: any) { }\n}\n","export class DelonMockConfig {\n  /** è§åå®ä¹æ°æ® */\n  // tslint:disable-next-line:no-any\n  data: any;\n  /** è¯·æ±å»¶è¿ï¼åä½ï¼æ¯«ç§ï¼é»è®¤ï¼`300` */\n  delay ?= 300;\n  /** æ¯å¦å¼ºå¶ææè¯·æ±é½Mockï¼`true` è¡¨ç¤ºå½è¯·æ±çURLä¸å­å¨æ¶ç´æ¥è¿å 404 éè¯¯ï¼`false` è¡¨ç¤ºæªå½ä¸­æ¶åéçå®HTTPè¯·æ± */\n  force ?= false;\n  /** æ¯å¦æå° Mock è¯·æ±ä¿¡æ¯ï¼å¼¥è¡¥æµè§å¨æ Networkä¿¡æ¯ */\n  log ?= true;\n  /**\n   * æ¯å¦æ¦æªå½ä¸­åç»§ç»­è°ç¨åç»­æ¦æªå¨ç `intercept` æ¹æ³ï¼é»è®¤ï¼`true`\n   */\n  executeOtherInterceptors ?= true;\n}\n","import { Injectable, OnDestroy } from '@angular/core';\nimport { MockCachedRule, MockRule } from './interface';\nimport { DelonMockConfig } from './mock.config';\n\n@Injectable()\nexport class MockService implements OnDestroy {\n  private cached: MockCachedRule[] = [];\n\n  constructor(private config: DelonMockConfig) {\n    this.applyMock();\n    delete this.config.data;\n  }\n\n  // #region parse rule\n\n  private applyMock() {\n    this.cached = [];\n    try {\n      this.realApplyMock();\n    } catch (e) {\n      this.outputError(e);\n    }\n  }\n\n  private realApplyMock() {\n    const data = this.config.data;\n    if (!data) return;\n    Object.keys(data).forEach((key: string) => {\n      const rules = data[key];\n      if (!rules) return;\n      Object.keys(rules).forEach((ruleKey: string) => {\n        const value = rules[ruleKey];\n        if (\n          !(\n            typeof value === 'function' ||\n            typeof value === 'object' ||\n            typeof value === 'string'\n          )\n        ) {\n          throw Error(\n            `mock value of [${key}-${ruleKey}] should be function or object or string, but got ${typeof value}`,\n          );\n        }\n        const rule = this.genRule(ruleKey, value);\n        if (\n          ['GET', 'POST', 'PUT', 'HEAD', 'DELETE', 'PATCH', 'OPTIONS'].indexOf(\n            rule.method,\n          ) === -1\n        ) {\n          throw Error(`method of ${key}-${ruleKey} is not valid`);\n        }\n        const item = this.cached.find(\n          w => w.url === rule.url && w.method === rule.method,\n        );\n        if (item) {\n          item.callback = rule.callback;\n        } else {\n          this.cached.push(rule);\n        }\n      });\n    });\n    // regular ordering\n    this.cached.sort(\n      (a, b) =>\n        (b.martcher || '').toString().length -\n        (a.martcher || '').toString().length,\n    );\n  }\n\n  // tslint:disable-next-line:no-any\n  private genRule(key: string, callback: any): MockCachedRule {\n    let method = 'GET';\n    let url = key;\n\n    if (key.indexOf(' ') > -1) {\n      const splited = key.split(' ');\n      method = splited[0].toLowerCase();\n      url = splited[1];\n    }\n\n    let martcher: RegExp = null;\n    let segments: string[] = [];\n    if (~url.indexOf(':')) {\n      segments = url!\n        .split('/')\n        .filter(segment => segment.startsWith(':'))\n        .map(v => v.substring(1));\n      const reStr = url!\n        .split('/')\n        .map(segment => (segment.startsWith(':') ? `([^/]+)` : segment))\n        .join('/');\n      martcher = new RegExp(`^${reStr}`, 'i');\n    } else if (/(\\([^)]+\\))/i.test(url)) {\n      martcher = new RegExp(url, 'i');\n    }\n\n    return {\n      url,\n      martcher,\n      segments,\n      callback,\n      method: method.toUpperCase(),\n    };\n  }\n\n  // tslint:disable-next-line:no-any\n  private outputError(error: any) {\n    const filePath = error.message.split(': ')[0];\n    const errors = error.stack\n      .split('\\n')\n      .filter(line => line.trim().indexOf('at ') !== 0)\n      .map(line => line.replace(`${filePath}: `, ''));\n    errors.splice(1, 0, ['']);\n\n    console.group();\n    console.warn(`==========Failed to parse mock config.==========`);\n    console.log(errors.join('\\n'));\n    console.groupEnd();\n\n    throw error;\n  }\n\n  // #endregion\n\n  getRule(method: string, url: string): MockRule {\n    method = (method || 'GET').toUpperCase();\n    const params = {};\n    const list =\n      this.cached.filter(\n        w =>\n          w.method === method &&\n          (w.martcher ? w.martcher.test(url) : w.url === url),\n      );\n    if (list.length === 0) return null;\n    const ret = list.find(w => w.url === url) || list[0];\n    if (ret.martcher) {\n      const execArr = ret.martcher.exec(url);\n      execArr.slice(1).map((value: string, index: number) => {\n        params[ret.segments[index]] = value;\n      });\n    }\n    return {\n      url,\n      method: ret.method,\n      params,\n      callback: ret.callback,\n    };\n  }\n\n  clearCache() {\n    this.cached = [];\n  }\n\n  get rules() {\n    return this.cached;\n  }\n\n  ngOnDestroy(): void {\n    this.clearCache();\n  }\n}\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","// tslint:disable:no-any\nimport { HttpBackend, HttpErrorResponse, HttpEvent, HttpHandler, HttpInterceptor, HttpRequest, HttpResponse, HttpResponseBase, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { Injectable, Injector } from '@angular/core';\nimport { of, throwError, Observable } from 'rxjs';\nimport { delay } from 'rxjs/operators';\n\nimport { MockRequest } from './interface';\nimport { DelonMockConfig } from './mock.config';\nimport { MockService } from './mock.service';\nimport { MockStatusError } from './status.error';\n\nclass HttpMockInterceptorHandler implements HttpHandler {\n  constructor(private next: HttpHandler, private interceptor: HttpInterceptor) { }\n\n  handle(req: HttpRequest<any>): Observable<HttpEvent<any>> {\n    return this.interceptor.intercept(req, this.next);\n  }\n}\n\n@Injectable()\nexport class MockInterceptor implements HttpInterceptor {\n  constructor(private injector: Injector) { }\n\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n    const src = this.injector.get(MockService);\n    const config = {\n      delay: 300,\n      force: false,\n      log: true,\n      executeOtherInterceptors: true,\n      ...this.injector.get(DelonMockConfig, null),\n    };\n    const rule = src.getRule(req.method, req.url.split('?')[0]);\n    if (!rule && !config.force) {\n      return next.handle(req);\n    }\n\n    let res: any;\n    switch (typeof rule.callback) {\n      case 'function':\n        const mockRequest: MockRequest = {\n          original: req,\n          body: req.body,\n          queryString: {},\n          headers: {},\n          params: rule.params,\n        };\n        const urlParams = req.url.split('?');\n        if (urlParams.length > 1) {\n          urlParams[1].split('&').forEach(item => {\n            const itemArr = item.split('=');\n            const key = itemArr[0];\n            const value = itemArr[1];\n            // is array\n            if (Object.keys(mockRequest.queryString).includes(key)) {\n              if (!Array.isArray(mockRequest.queryString[key])) {\n                mockRequest.queryString[key] = [mockRequest.queryString[key]];\n              }\n              mockRequest.queryString[key].push(value);\n            } else {\n              mockRequest.queryString[key] = value;\n            }\n          });\n        }\n        req.params\n          .keys()\n          .forEach(key => (mockRequest.queryString[key] = req.params.get(key)));\n        req.headers\n          .keys()\n          .forEach(key => (mockRequest.headers[key] = req.headers.get(key)));\n\n        try {\n          res = rule.callback.call(this, mockRequest);\n        } catch (e) {\n          res = new HttpErrorResponse({\n            url: req.url,\n            headers: req.headers,\n            status: 400,\n            statusText: e.statusText || 'Unknown Error',\n            error: e.error,\n          });\n          if (e instanceof MockStatusError) {\n            res.status = e.status;\n          }\n        }\n        break;\n      default:\n        res = rule.callback;\n        break;\n    }\n\n    if (!(res instanceof HttpResponseBase)) {\n      res = new HttpResponse({\n        status: 200,\n        url: req.url,\n        body: res,\n      });\n    }\n\n    if (config.log) {\n      console.log(`%cð½${req.method}->${req.url}->request`, 'background:#000;color:#bada55', req);\n      console.log(`%cð½${req.method}->${req.url}->response`, 'background:#000;color:#bada55', res);\n    }\n\n    const res$ = res instanceof HttpErrorResponse ? throwError(res) : of(res);\n\n    if (config.executeOtherInterceptors) {\n      const interceptors = this.injector.get(HTTP_INTERCEPTORS, []);\n      const lastInterceptors = interceptors.slice(interceptors.indexOf(this) + 1);\n      if (lastInterceptors.length > 0) {\n        const chain = lastInterceptors.reduceRight(\n          (_next, _interceptor) => new HttpMockInterceptorHandler(_next, _interceptor), {\n            handle: () => res$,\n          } as HttpBackend,\n        );\n        return chain.handle(req).pipe(delay(config.delay));\n      }\n    }\n\n    return res$.pipe(delay(config.delay));\n  }\n}\n","import { HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { ModuleWithProviders, NgModule } from '@angular/core';\n\nimport { DelonMockConfig } from './mock.config';\nimport { MockInterceptor } from './mock.interceptor';\nimport { MockService } from './mock.service';\n\n@NgModule({})\nexport class DelonMockModule {\n  static forRoot(config: DelonMockConfig): ModuleWithProviders {\n    return {\n      ngModule: DelonMockModule,\n      providers: [\n        MockService,\n        { provide: DelonMockConfig, useValue: config },\n        { provide: HTTP_INTERCEPTORS, useClass: MockInterceptor, multi: true },\n      ],\n    };\n  }\n\n  static forChild(): ModuleWithProviders {\n    return {\n      ngModule: DelonMockModule,\n      providers: [\n        { provide: HTTP_INTERCEPTORS, useClass: MockInterceptor, multi: true },\n      ],\n    };\n  }\n}\n"]}